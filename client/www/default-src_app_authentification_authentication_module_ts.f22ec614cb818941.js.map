{"version":3,"file":"default-src_app_authentification_authentication_module_ts.f22ec614cb818941.js","mappings":"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","sources":["./src/app/authentification/authentication.module.ts","./src/app/authentification/forgot-password/forgot-password.component.ts","./src/app/authentification/forgot-password/forgot-password.component.html","./src/app/authentification/login/login.component.ts","./src/app/authentification/login/login.component.html","./src/app/authentification/other-auth-pages/verified-mail/verified-mail.component.ts","./src/app/authentification/other-auth-pages/verified-mail/verified-mail.component.html","./src/app/authentification/reset-password/reset-password.component.ts","./src/app/authentification/reset-password/reset-password.component.html","./src/app/authentification/signup/signup.component.ts","./src/app/authentification/signup/signup.component.html","./src/app/models/response-model.ts"],"sourcesContent":["import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\nimport { CoreCommonModule } from \"@core/common.module\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { ResetPasswordComponent } from \"./reset-password/reset-password.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { TranslateModule } from \"@ngx-translate/core\";\r\nimport { VerifiedMailComponent } from \"./other-auth-pages/verified-mail/verified-mail.component\";\r\nimport { ToastrComponent } from \"app/common/toastr/toastr.component\";\r\n\r\n// routing\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"login\",\r\n    pathMatch: \"full\",\r\n  },\r\n  {\r\n    path: \"login\",\r\n    component: LoginComponent,\r\n    data: { animation: \"auth\" },\r\n  },\r\n  {\r\n    path: \"signup\",\r\n    component: SignupComponent,\r\n    data: { animation: \"auth\" },\r\n  },\r\n  {\r\n    path: \"forgot-password\",\r\n    component: ForgotPasswordComponent,\r\n  },\r\n  {\r\n    path: \"reset-password/:email\",\r\n    component: ResetPasswordComponent,\r\n  },\r\n  {\r\n    path: \"verified-mail/:email\",\r\n    component: VerifiedMailComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignupComponent,\r\n    ResetPasswordComponent,\r\n    ForgotPasswordComponent,\r\n    VerifiedMailComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    NgbModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CoreCommonModule,\r\n    TranslateModule,\r\n  ],\r\n  providers: [ToastrComponent],\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport {\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\n\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { CallApiService } from \"app/services/call-api.service\";\r\nimport { ResponseModel } from \"app/models/response-model\";\r\n\r\n@Component({\r\n  selector: \"app-forgot-password\",\r\n  templateUrl: \"./forgot-password.component.html\",\r\n  styleUrls: [\"./forgot-password.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  // Public\r\n  public emailVar;\r\n  public coreConfig: any;\r\n  public forgotPasswordForm: UntypedFormGroup;\r\n  public submitted = false;\r\n  public response = new ResponseModel();\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   * @param {FormBuilder} _formBuilder\r\n   *\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _formBuilder: UntypedFormBuilder,\r\n    private _service: CallApiService\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.forgotPasswordForm.controls;\r\n  }\r\n\r\n  /**\r\n   * On Submit\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.forgotPasswordForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.sendResetLink();\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    this.forgotPasswordForm = this._formBuilder.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n    });\r\n\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  sendResetLink() {\r\n    this.response = new ResponseModel();\r\n    this._service\r\n      .callPostMethod(\"/api/forgotPassword\", this.forgotPasswordForm.value)\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.response.sendLinkForResetOnMail = true;\r\n        } else {\r\n          this.response.mailNotExists = true;\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"auth-wrapper auth-v2\">\r\n    <div class=\"auth-inner row m-0\">\r\n        <!-- Brand logo--><a class=\"brand-logo\" href=\"javascript:void(0);\">\r\n            <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n            <h2 class=\"brand-text text-primary ml-1\">{{ coreConfig.app.appName }}</h2>\r\n        </a>\r\n        <!-- /Brand logo-->\r\n        <!-- Left Text-->\r\n        <div class=\"d-none d-lg-flex col-lg-8 align-items-center p-5\">\r\n            <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\r\n                <img class=\"img-fluid\" [src]=\"\r\n              coreConfig.layout.skin === 'dark'\r\n                ? 'assets/images/pages/forgot-password-v2-dark.svg'\r\n                : 'assets/images/pages/forgot-password-v2.svg'\r\n            \" alt=\"Forgot password V2\" />\r\n            </div>\r\n        </div>\r\n        <!-- /Left Text-->\r\n        <!-- Forgot password-->\r\n        <div class=\"d-flex col-lg-4 align-items-center auth-bg px-2 p-lg-5\">\r\n            <div class=\"col-12 col-sm-8 col-md-6 col-lg-12 px-xl-2 mx-auto\">\r\n                <h2 class=\"card-title font-weight-bold mb-1\">{{'forgot.title' | translate}}</h2>\r\n                <p class=\"card-text mb-2\">{{'forgot.text' | translate}}</p>\r\n                <form class=\"auth-forgot-password-form mt-2\" [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"forgot-password-email\">{{'commonFields.email' |\r\n                            translate}}</label>\r\n                        <input class=\"form-control\" type=\"text\" formControlName=\"email\" placeholder=\"john@example.com\"\r\n                            aria-describedby=\"forgot-password-email\" autofocus=\"\" tabindex=\"1\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                    </div>\r\n                    <!-- NOT SUCCESSFULY MESSAGE -->\r\n\r\n                    <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.email.errors.required\">{{'form.emailIsRequired' | translate}}</div>\r\n                        <div *ngIf=\"f.email.errors.email\">{{'form.emailMustBeValid' | translate}}</div>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"response.mailNotExists\" class=\"text-center\">\r\n                        <p class=\"badge badge-light-danger badge-pill full-width p-1\">{{'forgot.mailNotExists' |\r\n                            translate}}</p>\r\n                    </div>\r\n\r\n                    <!-- END NOT SUCCESSFULY MESSAGE -->\r\n\r\n                    <!-- SUCCESSFULY MESSAGE -->\r\n                    <div *ngIf=\"response.sendLinkForResetOnMail\" class=\"text-center\">\r\n                        <p class=\"badge badge-light-success badge-pill full-width p-1 white-space-break\">\r\n                            {{'forgot.sendLinkForResetOnMail' |\r\n                            translate}}</p>\r\n                    </div>\r\n                    <!-- END SUCCESSFULY MESSAGE -->\r\n                    <button class=\"btn btn-primary btn-block\" tabindex=\"2\" rippleEffect>{{'forgot.sendResetLink' |\r\n                        translate}}</button>\r\n                </form>\r\n                <p class=\"text-center mt-2\">\r\n                    <a routerLink=\"/auth/login\"><i data-feather=\"chevron-left\" class=\"mb-25\"></i>\r\n                        {{'authGlobal.backToLogin' | translate}}</a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <!-- /Forgot password-->\r\n    </div>\r\n</div>","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { CallApiService } from \"app/services/call-api.service\";\r\nimport { StorageService } from \"app/services/storage.service\";\r\n\r\n@Component({\r\n  selector: \"login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  //  Public\r\n  public coreConfig: any;\r\n  public loginForm: UntypedFormGroup;\r\n  public loading = false;\r\n  public submitted = false;\r\n  public returnUrl: string;\r\n  public error = \"\";\r\n  public passwordTextType: boolean;\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _formBuilder: UntypedFormBuilder,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _service: CallApiService,\r\n    private _storageService: StorageService\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  /**\r\n   * Toggle password\r\n   */\r\n  togglePasswordTextType() {\r\n    this.passwordTextType = !this.passwordTextType;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    // Login\r\n    this.loading = true;\r\n\r\n    this._service\r\n      .callPostMethod(\"/api/login\", this.loginForm.value)\r\n      .subscribe((data: any) => {\r\n        if (data && data.token) {\r\n\r\n          this._storageService.setToken(data.token);\r\n          const user = this._storageService.getDecodeToken();\r\n          if (!user.firstname || !user.lastname) {\r\n            this._router.navigate([\"wizard\"]);\r\n          } else {\r\n            this._router.navigate([\"dashboard/admin\"]);\r\n          }\r\n          this.loading = false;\r\n        } else {\r\n          this.error = data.type;\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    this.loginForm = this._formBuilder.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      password: [\"\", Validators.required],\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this._route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n}\r\n","<div class=\"auth-wrapper auth-v2\">\r\n  <div class=\"auth-inner row m-0\">\r\n    <!-- Brand logo--><a class=\"brand-logo\" href=\"javascript:void(0);\">\r\n      <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n      <h2 class=\"brand-text text-primary ml-1\">{{ coreConfig.app.appName }}</h2>\r\n    </a>\r\n    <!-- /Brand logo-->\r\n    <!-- Left Text-->\r\n    <div class=\"d-none d-lg-flex col-lg-8 align-items-center p-5\">\r\n      <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\r\n        <img class=\"img-fluid\" [src]=\"\r\n            coreConfig.layout.skin === 'dark'\r\n              ? 'assets/images/pages/login-v2-dark.svg'\r\n              : 'assets/images/pages/login-v2.svg'\r\n          \" alt=\"Login V2\" />\r\n      </div>\r\n    </div>\r\n    <!-- /Left Text-->\r\n    <!-- Login-->\r\n    <div class=\"d-flex col-lg-4 align-items-center auth-bg px-2 p-lg-5\">\r\n      <div class=\"col-12 col-sm-8 col-md-6 col-lg-12 px-xl-2 mx-auto\">\r\n        <h2 class=\"card-title font-weight-bold mb-1\">Welcome to Termmy! 👋</h2>\r\n        <p class=\"card-text mb-2\">Please sign-in to your account and start the adventure</p>\r\n\r\n        <ngb-alert [type]=\"'danger'\" [dismissible]=\"false\" *ngIf=\"error\">\r\n          <div class=\"alert-body\">\r\n            <p *ngIf=\"error === 'verified'\">{{ 'login.verifiedError' | translate }}</p>\r\n            <p *ngIf=\"error === 'active'\">{{ 'login.activeError' | translate }}</p>\r\n            <p *ngIf=\"error === 'exist'\">{{ 'login.notExistsError' | translate }}</p>\r\n          </div>\r\n        </ngb-alert>\r\n\r\n        <form class=\"auth-login-form mt-2\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\" for=\"login-email\">Email</label>\r\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\"\r\n              [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" placeholder=\"admin@demo.com\"\r\n              aria-describedby=\"login-email\" autofocus=\"\" tabindex=\"1\" />\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n              <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              <label for=\"login-password\">Password</label><a routerLink=\"/auth/forgot-password\"><small>Forgot\r\n                  Password?</small></a>\r\n            </div>\r\n            <div class=\"input-group input-group-merge form-password-toggle\">\r\n              <input [type]=\"passwordTextType ? 'text' : 'password'\" formControlName=\"password\"\r\n                class=\"form-control form-control-merge\"\r\n                [ngClass]=\"{ 'is-invalid error': submitted && f.password.errors }\" placeholder=\"············\"\r\n                aria-describedby=\"login-password\" tabindex=\"2\" />\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text cursor-pointer\"><i class=\"feather font-small-4\" [ngClass]=\"{\r\n                      'icon-eye-off': passwordTextType,\r\n                      'icon-eye': !passwordTextType\r\n                    }\" (click)=\"togglePasswordTextType()\"></i></span>\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\"\r\n              [ngClass]=\"{ 'd-block': submitted && f.password.errors }\">\r\n              <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"custom-control custom-checkbox\">\r\n              <input class=\"custom-control-input\" id=\"remember-me\" type=\"checkbox\" tabindex=\"3\" />\r\n              <label class=\"custom-control-label\" for=\"remember-me\"> Remember Me</label>\r\n            </div>\r\n          </div>\r\n          <button [disabled]=\"loading\" class=\"btn btn-primary btn-block\" tabindex=\"4\" rippleEffect>\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>Sign in\r\n          </button>\r\n        </form>\r\n        <p class=\"text-center mt-2\">\r\n          <span>New on our platform?</span><a routerLink=\"/auth/signup\"><span>&nbsp;Create an account</span></a>\r\n        </p>\r\n        <div class=\"divider my-2\">\r\n          <div class=\"divider-text\">or</div>\r\n        </div>\r\n        <div class=\"auth-footer-btn d-flex justify-content-center\">\r\n          <a class=\"btn btn-facebook\" href=\"javascript:void(0)\"><i data-feather=\"facebook\"></i></a><a\r\n            class=\"btn btn-twitter white\" href=\"javascript:void(0)\"><i data-feather=\"twitter\"></i></a><a\r\n            class=\"btn btn-google\" href=\"javascript:void(0)\"><i data-feather=\"mail\"></i></a><a class=\"btn btn-github\"\r\n            href=\"javascript:void(0)\"><i data-feather=\"github\"></i></a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- /Login-->\r\n  </div>\r\n</div>","import { Component, ViewEncapsulation } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { CallApiService } from \"app/services/call-api.service\";\r\nimport { Subject } from \"rxjs\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"app-verified-mail\",\r\n  templateUrl: \"./verified-mail.component.html\",\r\n  styleUrls: [\"./verified-mail.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class VerifiedMailComponent {\r\n  // Public\r\n  public coreConfig: any;\r\n  public display = false;\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   * @param {FormBuilder} _formBuilder\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _service: CallApiService,\r\n    private _activateRouter: ActivatedRoute,\r\n    private _router: Router\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n\r\n    this._service\r\n      .callGetMethod(\r\n        \"/api/checkIfMailVerified\",\r\n        this._activateRouter.snapshot.params.email\r\n      )\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(\r\n        (data) => {\r\n          this.display = true;\r\n          if (data) {\r\n            return;\r\n          } else {\r\n            this._router.navigate([\"/miscellaneous/something-happened\"]);\r\n          }\r\n        },\r\n        (error) => {\r\n          this._router.navigate([\"/miscellaneous/something-happened\"]);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<!-- Under maintenance-->\r\n<div class=\"misc-wrapper\" *ngIf=\"display\">\r\n    <!-- Brand logo--><a class=\"brand-logo d-flex p-2\" href=\"javascript:void(0);\">\r\n        <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n        <h2 class=\"brand-text text-primary ml-1\">{{ coreConfig.app.appName }}</h2>\r\n    </a>\r\n    <div class=\"misc-inner p-2 p-sm-3\">\r\n        <div class=\"w-100 text-center\">\r\n            <h2 class=\"mb-1\">{{'verifiedMail.title' | translate}} </h2>\r\n            <p class=\"mb-3\">{{'verifiedMail.text' | translate}}\r\n            </p>\r\n            <form class=\"row row-cols-md-auto row justify-content-center align-items-center m-0 mb-2 gx-3\"\r\n                action=\"javascript:void(0)\">\r\n                <div class=\"col-12 d-md-block d-grid ps-md-0 ps-auto\">\r\n                    <button routerLink=\"/auth/login\" class=\"btn btn-primary mb-1 btn-sm-block\"\r\n                        type=\"submit\">{{'verifiedMail.goToLogin' |\r\n                        translate}}</button>\r\n                </div>\r\n            </form><img class=\"img-fluid\" src=\"../../../../assets/images/illustration/verified-mail.png\"\r\n                alt=\"Under maintenance page\" />\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- / Under maintenance-->","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport {\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\n\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { CallApiService } from \"app/services/call-api.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { ResponseModel } from \"app/models/response-model\";\r\n\r\n@Component({\r\n  selector: \"app-reset-password\",\r\n  templateUrl: \"./reset-password.component.html\",\r\n  styleUrls: [\"./reset-password.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  public coreConfig: any;\r\n  public passwordTextType: boolean;\r\n  public confPasswordTextType: boolean;\r\n  public resetPasswordForm: UntypedFormGroup;\r\n  public submitted = false;\r\n  public response = new ResponseModel();\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   * @param {FormBuilder} _formBuilder\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _formBuilder: UntypedFormBuilder,\r\n    private _service: CallApiService,\r\n    private _activateRouter: ActivatedRoute,\r\n    private _router: Router\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.resetPasswordForm.controls;\r\n  }\r\n\r\n  /**\r\n   * Toggle password\r\n   */\r\n  togglePasswordTextType() {\r\n    this.passwordTextType = !this.passwordTextType;\r\n  }\r\n\r\n  /**\r\n   * Toggle confirm password\r\n   */\r\n  toggleConfPasswordTextType() {\r\n    this.confPasswordTextType = !this.confPasswordTextType;\r\n  }\r\n\r\n  /**\r\n   * On Submit\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.resetPasswordForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.resetPassword();\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    this.resetPasswordForm = this._formBuilder.group({\r\n      newPassword: [\"\", [Validators.required]],\r\n      confirmPassword: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n\r\n    this.checkIfMailExists();\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  checkIfMailExists() {\r\n    this._service\r\n      .callGetMethod(\r\n        \"/api/checkIfMailExists\",\r\n        this._activateRouter.snapshot.params.email\r\n      )\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(\r\n        (data) => {\r\n          if (data) {\r\n            return;\r\n          } else {\r\n            this._router.navigate([\"/miscellaneous/something-happened\"]);\r\n          }\r\n        },\r\n        (error) => {\r\n          this._router.navigate([\"/miscellaneous/something-happened\"]);\r\n        }\r\n      );\r\n  }\r\n\r\n  resetPassword() {\r\n    this.response = new ResponseModel();\r\n    if (\r\n      this.resetPasswordForm.value.newPassword ===\r\n      this.resetPasswordForm.value.confirmPassword\r\n    ) {\r\n      const body = {\r\n        password: this.resetPasswordForm.value.newPassword,\r\n        email: this._activateRouter.snapshot.params.email,\r\n      };\r\n      this._service\r\n        .callPostMethod(\"/api/resetPassword\", body)\r\n        .subscribe((data) => {\r\n          if (data) {\r\n            this.response.changedPasswordSuccessfuly = true;\r\n            setTimeout(() => {\r\n              this._router.navigate([\"/auth/login\"]);\r\n            }, 3000);\r\n          }\r\n        });\r\n    } else {\r\n      this.response.passwordNotMatch = true;\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-wrapper auth-v2\">\r\n    <div class=\"auth-inner row m-0\">\r\n        <!-- Brand logo--><a class=\"brand-logo\" href=\"javascript:void(0);\">\r\n            <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n            <h2 class=\"brand-text text-primary ml-1\">{{ coreConfig.app.appName }}</h2>\r\n        </a>\r\n        <!-- /Brand logo-->\r\n        <!-- Left Text-->\r\n        <div class=\"d-none d-lg-flex col-lg-8 align-items-center p-5\">\r\n            <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\r\n                <img [src]=\"\r\n              coreConfig.layout.skin === 'dark'\r\n                ? 'assets/images/pages/reset-password-v2-dark.svg'\r\n                : 'assets/images/pages/reset-password-v2.svg'\r\n            \" img-fluid=\"img-fluid\" alt=\"Register V2\" />\r\n            </div>\r\n        </div>\r\n        <!-- /Left Text-->\r\n        <!-- Reset password-->\r\n        <div class=\"d-flex col-lg-4 align-items-center auth-bg px-2 p-lg-5\">\r\n            <div class=\"col-12 col-sm-8 col-md-6 col-lg-12 px-xl-2 mx-auto\">\r\n                <h2 class=\"card-title font-weight-bold mb-1\">{{'resetPassword.title' | translate}}</h2>\r\n                <p class=\"card-text mb-2\">{{'resetPassword.text' | translate}}</p>\r\n                <form class=\"auth-reset-password-form mt-2\" [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"d-flex justify-content-between\">\r\n                            <label for=\"reset-password-new\">{{'resetPassword.newPassword' | translate}}</label>\r\n                        </div>\r\n                        <div class=\"input-group input-group-merge form-password-toggle\">\r\n                            <input [type]=\"passwordTextType ? 'text' : 'password'\" formControlName=\"newPassword\"\r\n                                class=\"form-control form-control-merge\" placeholder=\"············\"\r\n                                aria-describedby=\"reset-password-new\" tabindex=\"1\" autofocus\r\n                                [ngClass]=\"{ 'is-invalid error': submitted && f.newPassword.errors }\" />\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text cursor-pointer\"><i class=\"feather font-small-4\" [ngClass]=\"{\r\n                        'icon-eye-off': passwordTextType,\r\n                        'icon-eye': !passwordTextType\r\n                      }\" (click)=\"togglePasswordTextType()\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"submitted && f.newPassword.errors\" class=\"invalid-feedback\"\r\n                            [ngClass]=\"{ 'd-block': submitted && f.newPassword.errors }\">\r\n                            <div *ngIf=\"f.newPassword.errors.required\">{{'form.passwordIsRequired' | translate}}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"d-flex justify-content-between\">\r\n                            <label for=\"reset-password-confirm\">{{'resetPassword.confirmPassword' | translate}}</label>\r\n                        </div>\r\n                        <div class=\"input-group input-group-merge form-password-toggle\">\r\n                            <input [type]=\"confPasswordTextType ? 'text' : 'password'\" formControlName=\"confirmPassword\"\r\n                                class=\"form-control form-control-merge\" placeholder=\"············\"\r\n                                aria-describedby=\"reset-password-confirm\" tabindex=\"2\"\r\n                                [ngClass]=\"{ 'is-invalid error': submitted && f.confirmPassword.errors }\" />\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text cursor-pointer\"><i class=\"feather font-small-4\" [ngClass]=\"{\r\n                        'icon-eye-off': confPasswordTextType,\r\n                        'icon-eye': !confPasswordTextType\r\n                      }\" (click)=\"toggleConfPasswordTextType()\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\"\r\n                            [ngClass]=\"{ 'd-block': submitted && f.confirmPassword.errors }\">\r\n                            <div *ngIf=\"f.confirmPassword.errors.required\">{{'form.passwordIsRequired' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- NOT SUCCESSFULY MESSAGE -->\r\n\r\n                    <div *ngIf=\"response.passwordNotMatch\" class=\"text-center\">\r\n                        <p class=\"badge badge-light-danger badge-pill full-width p-1\">{{'resetPassword.passwordNotMatch'\r\n                            |\r\n                            translate}}</p>\r\n                    </div>\r\n\r\n                    <!-- END NOT SUCCESSFULY MESSAGE -->\r\n\r\n                    <!-- SUCCESSFULY MESSAGE -->\r\n                    <div *ngIf=\"response.changedPasswordSuccessfuly\" class=\"text-center\">\r\n                        <p class=\"badge badge-light-success badge-pill full-width p-1 white-space-break\">\r\n                            {{'resetPassword.changedPasswordSuccessfuly' |\r\n                            translate}}</p>\r\n                    </div>\r\n                    <!-- END SUCCESSFULY MESSAGE -->\r\n\r\n                    <button class=\"btn btn-primary btn-block\" tabindex=\"3\" rippleEffect>{{'resetPassword.setNewPassword'\r\n                        | translate}}</button>\r\n                </form>\r\n                <p class=\"text-center mt-2\">\r\n                    <a routerLink=\"/auth/login\"><i data-feather=\"chevron-left\" class=\"mb-25\"></i>\r\n                        {{'authGlobal.backToLogin' | translate}}</a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <!-- /Reset password-->\r\n    </div>\r\n</div>","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport {\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\n\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { CallApiService } from \"app/services/call-api.service\";\r\nimport { ResponseModel } from \"app/models/response-model\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { ToastrComponent } from \"app/common/toastr/toastr.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  // Public\r\n  public coreConfig: any;\r\n  public passwordTextType: boolean;\r\n  public registerForm: UntypedFormGroup;\r\n  public submitted = false;\r\n  public response = new ResponseModel();\r\n  public loading = false;\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   * @param {FormBuilder} _formBuilder\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _formBuilder: UntypedFormBuilder,\r\n    private _service: CallApiService,\r\n    private _router: Router,\r\n    private _activatedRouter: ActivatedRoute,\r\n    private _toastr: ToastrComponent,\r\n    private _translate: TranslateService\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.registerForm.controls;\r\n  }\r\n\r\n  /**\r\n   * Toggle password\r\n   */\r\n  togglePasswordTextType() {\r\n    this.passwordTextType = !this.passwordTextType;\r\n  }\r\n\r\n  /**\r\n   * On Submit\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.signUp(this.registerForm.value);\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    this.registerForm = this._formBuilder.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      password: [\"\", Validators.required],\r\n      rePassword: [\"\", Validators.required],\r\n    });\r\n\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n    this.validateRecommenedBonusLink();\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  //#region\r\n\r\n  signUp(data: any) {\r\n    this.response = new ResponseModel();\r\n    this.loading = true;\r\n    if (data.password === data.rePassword) {\r\n      this._service.callPostMethod(\"/api/signUp\", data).subscribe((data) => {\r\n        if (data) {\r\n          this.response.verifyYourMail = true;\r\n          this.loading = false;\r\n          this.createRecommendedBonus();\r\n          setTimeout(() => {\r\n            this._router.navigate([\"/auth/login\"]);\r\n          }, 6000);\r\n        } else {\r\n          this.loading = false;\r\n          this.response.mailExists = true;\r\n        }\r\n      });\r\n    } else {\r\n      this.loading = false;\r\n      this.response.passwordNotMatch = true;\r\n    }\r\n  }\r\n\r\n  validateRecommenedBonusLink() {\r\n    const id = this._activatedRouter.snapshot.queryParams.id;\r\n    if (id) {\r\n      this._service\r\n        .callGetMethod(\"/api/validateRecommenedBonusLink\", id)\r\n        .subscribe((data) => {\r\n          if (!data) {\r\n            this._router.navigate([\"/auth/signup\"]);\r\n            this._toastr.showErrorCustom(\r\n              this._translate.instant(\"recommended.wrongRecommendedBonusLink\")\r\n            );\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  createRecommendedBonus() {\r\n    const id = this._activatedRouter.snapshot.queryParams.id;\r\n    if (id) {\r\n      this._service\r\n        .callPostMethod(\"/api/createRecommendedBonus\", { id: id })\r\n        .subscribe((data) => {});\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n}\r\n","<div class=\"auth-wrapper auth-v2\">\r\n    <div class=\"auth-inner row m-0\">\r\n        <!-- Brand logo--><a class=\"brand-logo\" href=\"javascript:void(0);\">\r\n            <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n            <h2 class=\"brand-text text-primary ml-1\">{{ coreConfig.app.appName }}</h2>\r\n        </a>\r\n        <!-- /Brand logo-->\r\n        <!-- Left Text-->\r\n        <div class=\"d-none d-lg-flex col-lg-8 align-items-center p-5\">\r\n            <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\r\n                <img class=\"img-fluid\" [src]=\"\r\n              coreConfig.layout.skin === 'dark'\r\n                ? 'assets/images/pages/register-v2-dark.svg'\r\n                : 'assets/images/pages/register-v2.svg'\r\n            \" alt=\"Register V2\" />\r\n            </div>\r\n        </div>\r\n        <!-- /Left Text-->\r\n        <!-- Register-->\r\n        <div class=\"d-flex col-lg-4 align-items-center auth-bg px-2 p-lg-5\">\r\n            <div class=\"col-12 col-sm-8 col-md-6 col-lg-12 px-xl-2 mx-auto\">\r\n                <h2 class=\"card-title font-weight-bold mb-1\">{{'signUp.title' | translate}}</h2>\r\n                <p class=\"card-text mb-2\">{{'signUp.text' | translate}}</p>\r\n                <form class=\"auth-register-form mt-2\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"register-email\" class=\"form-label\">{{'commonFields.email' | translate}}</label>\r\n                        <input type=\"text\" formControlName=\"email\" class=\"form-control\" placeholder=\"email@termmy.com\"\r\n                            aria-describedby=\"register-email\" tabindex=\"2\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"f.email.errors.required\">{{'form.emailIsRequired' | translate}}</div>\r\n                            <div *ngIf=\"f.email.errors.email\">{{'form.emailMustBeValid' | translate}}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"register-password\" class=\"form-label\">{{'commonFields.password' |\r\n                            translate}}</label>\r\n\r\n                        <div class=\"input-group input-group-merge form-password-toggle\">\r\n                            <input [type]=\"passwordTextType ? 'text' : 'password'\" formControlName=\"password\"\r\n                                class=\"form-control form-control-merge\" placeholder=\"············\"\r\n                                aria-describedby=\"register-password\" tabindex=\"3\"\r\n                                [ngClass]=\"{ 'is-invalid error': submitted && f.password.errors }\" />\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text cursor-pointer\"><i class=\"feather font-small-4\" [ngClass]=\"{\r\n                        'icon-eye-off': passwordTextType,\r\n                        'icon-eye': !passwordTextType\r\n                      }\" (click)=\"togglePasswordTextType()\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\"\r\n                            [ngClass]=\"{ 'd-block': submitted && f.password.errors }\">\r\n                            <div *ngIf=\"f.password.errors.required\">{{'form.passwordIsRequired'}}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"register-password\" class=\"form-label\">{{'commonFields.rePassword' |\r\n                            translate}}</label>\r\n\r\n                        <div class=\"input-group input-group-merge form-password-toggle\">\r\n                            <input [type]=\"passwordTextType ? 'text' : 'password'\" formControlName=\"rePassword\"\r\n                                class=\"form-control form-control-merge\" placeholder=\"············\"\r\n                                aria-describedby=\"register-password\" tabindex=\"3\"\r\n                                [ngClass]=\"{ 'is-invalid error': submitted && f.password.errors }\" />\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text cursor-pointer\"><i class=\"feather font-small-4\" [ngClass]=\"{\r\n                        'icon-eye-off': passwordTextType,\r\n                        'icon-eye': !passwordTextType\r\n                      }\" (click)=\"togglePasswordTextType()\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\"\r\n                            [ngClass]=\"{ 'd-block': submitted && f.password.errors }\">\r\n                            <div *ngIf=\"f.password.errors.required\">{{'signUp.passwordIsRequired'}}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"custom-control custom-checkbox\">\r\n                            <input class=\"custom-control-input\" type=\"checkbox\" id=\"register-privacy-policy\"\r\n                                tabindex=\"4\" />\r\n                            <label class=\"custom-control-label\" for=\"register-privacy-policy\">\r\n                                {{'signUp.IAgreeTo' | translate}} <a href=\"javascript:void(0);\">{{'signUp.privacy' |\r\n                                    translate}}</a>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <!-- LABELS -->\r\n                    <div>\r\n\r\n                        <!-- NOT SUCCESSFULY MESSAGE -->\r\n\r\n                        <div *ngIf=\"submitted && registerForm.invalid\" class=\"text-center\">\r\n                            <p class=\"badge badge-light-danger badge-pill full-width p-1\">{{'signUp.fillRequredFields' |\r\n                                translate}}</p>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"response.mailExists\" class=\"text-center\">\r\n                            <p class=\"badge badge-light-danger badge-pill full-width p-1 white-space-break\">\r\n                                {{'signUp.mailExists' |\r\n                                translate}}</p>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"response.passwordNotMatch\" class=\"text-center\">\r\n                            <p class=\"badge badge-light-danger badge-pill full-width p-1 white-space-break\">\r\n                                {{'signUp.passwordNotMatch' |\r\n                                translate}}</p>\r\n                        </div>\r\n\r\n                        <!-- END NOT SUCCESSFULY MESSAGE -->\r\n\r\n                        <!-- SUCCESSFULY MESSAGE -->\r\n\r\n                        <div *ngIf=\"response.verifyYourMail\" class=\"text-center\">\r\n                            <p class=\"badge badge-light-success badge-pill full-width p-1 white-space-break\">\r\n                                {{'signUp.verifyYouMail' |\r\n                                translate}}</p>\r\n                        </div>\r\n\r\n                        <!-- END SUCCESSFULY MESSAGE -->\r\n                    </div>\r\n                    <!-- END LABELS -->\r\n                    <button class=\"btn btn-primary btn-block\" tabindex=\"5\" rippleEffect> <span *ngIf=\"loading\"\r\n                            class=\"spinner-border spinner-border-sm mr-1\"></span>{{'signUp.signUp' |\r\n                        translate}}</button>\r\n                </form>\r\n                <p class=\"text-center mt-2\">\r\n                    <span>{{'signUp.alreadyHaveAnAccount' | translate}}</span><a\r\n                        routerLink=\"/auth/login\"><span>&nbsp;{{'signUp.signInInstead' | translate}}</span></a>\r\n                </p>\r\n                <!-- <div class=\"divider my-2\">\r\n                    <div class=\"divider-text\">or</div>\r\n                </div>\r\n                <div class=\"auth-footer-btn d-flex justify-content-center\">\r\n                    <a class=\"btn btn-facebook\" href=\"javascript:void(0)\"><i data-feather=\"facebook\"></i></a><a\r\n                        class=\"btn btn-twitter white\" href=\"javascript:void(0)\"><i data-feather=\"twitter\"></i></a><a\r\n                        class=\"btn btn-google\" href=\"javascript:void(0)\"><i data-feather=\"mail\"></i></a><a\r\n                        class=\"btn btn-github\" href=\"javascript:void(0)\"><i data-feather=\"github\"></i></a>\r\n                </div> -->\r\n            </div>\r\n        </div>\r\n        <!-- /Register-->\r\n    </div>\r\n</div>","export class ResponseModel {\r\n  mailExists: boolean;\r\n  mailNotExists: boolean;\r\n  verifyYourMail: boolean;\r\n  passwordNotMatch: boolean;\r\n  sendLinkForResetOnMail: boolean;\r\n  changedPasswordSuccessfuly: boolean;\r\n}\r\n"],"names":["CommonModule","FormsModule","ReactiveFormsModule","RouterModule","NgbModule","CoreCommonModule","LoginComponent","SignupComponent","ResetPasswordComponent","ForgotPasswordComponent","TranslateModule","VerifiedMailComponent","ToastrComponent","routes","path","redirectTo","pathMatch","component","data","animation","AuthenticationModule","_","_2","_3","imports","forChild","declarations","i1","Validators","takeUntil","Subject","ResponseModel","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵtemplate","ForgotPasswordComponent_div_23_div_1_Template","ForgotPasswordComponent_div_23_div_2_Template","ɵɵproperty","ctx_r0","f","email","errors","required","ɵɵtextInterpolate1","constructor","_coreConfigService","_formBuilder","_service","submitted","response","_unsubscribeAll","config","layout","navbar","hidden","menu","footer","customizer","enableLocalStorage","forgotPasswordForm","controls","onSubmit","invalid","sendResetLink","ngOnInit","group","pipe","subscribe","coreConfig","ngOnDestroy","next","complete","callPostMethod","value","sendLinkForResetOnMail","mailNotExists","ɵɵdirectiveInject","CoreConfigService","i2","UntypedFormBuilder","i3","CallApiService","selectors","decls","vars","consts","template","ForgotPasswordComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","ForgotPasswordComponent_Template_form_ngSubmit_17_listener","ForgotPasswordComponent_div_23_Template","ForgotPasswordComponent_div_24_Template","ForgotPasswordComponent_div_25_Template","ɵɵpropertyInterpolate","app","appLogoImage","ɵɵsanitizeUrl","appName","skin","ɵɵpureFunction1","_c0","LoginComponent_ngb_alert_15_p_2_Template","LoginComponent_ngb_alert_15_p_3_Template","LoginComponent_ngb_alert_15_p_4_Template","error","LoginComponent_div_21_div_1_Template","LoginComponent_div_21_div_2_Template","ctx_r1","LoginComponent_div_34_div_1_Template","ctx_r2","password","_route","_router","_storageService","loading","loginForm","togglePasswordTextType","passwordTextType","token","setToken","user","getDecodeToken","firstname","lastname","navigate","type","returnUrl","snapshot","queryParams","ActivatedRoute","Router","i4","i5","StorageService","LoginComponent_Template","LoginComponent_ngb_alert_15_Template","LoginComponent_Template_form_ngSubmit_16_listener","LoginComponent_div_21_Template","LoginComponent_Template_i_click_33_listener","LoginComponent_div_34_Template","LoginComponent_span_41_Template","_c1","_c2","ɵɵpureFunction2","_c3","_activateRouter","display","callGetMethod","params","VerifiedMailComponent_Template","VerifiedMailComponent_div_0_Template","ResetPasswordComponent_div_28_div_1_Template","newPassword","ResetPasswordComponent_div_39_div_1_Template","confirmPassword","resetPasswordForm","toggleConfPasswordTextType","confPasswordTextType","resetPassword","checkIfMailExists","body","changedPasswordSuccessfuly","setTimeout","passwordNotMatch","ResetPasswordComponent_Template","ResetPasswordComponent_Template_form_ngSubmit_17_listener","ResetPasswordComponent_Template_i_click_27_listener","ResetPasswordComponent_div_28_Template","ResetPasswordComponent_Template_i_click_38_listener","ResetPasswordComponent_div_39_Template","ResetPasswordComponent_div_40_Template","ResetPasswordComponent_div_41_Template","SignupComponent_div_23_div_1_Template","SignupComponent_div_23_div_2_Template","SignupComponent_div_33_div_1_Template","SignupComponent_div_43_div_1_Template","_activatedRouter","_toastr","_translate","registerForm","signUp","rePassword","validateRecommenedBonusLink","verifyYourMail","createRecommendedBonus","mailExists","id","showErrorCustom","instant","i6","TranslateService","SignupComponent_Template","SignupComponent_Template_form_ngSubmit_17_listener","SignupComponent_div_23_Template","SignupComponent_Template_i_click_32_listener","SignupComponent_div_33_Template","SignupComponent_Template_i_click_42_listener","SignupComponent_div_43_Template","SignupComponent_div_54_Template","SignupComponent_div_55_Template","SignupComponent_div_56_Template","SignupComponent_div_57_Template","SignupComponent_span_59_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}