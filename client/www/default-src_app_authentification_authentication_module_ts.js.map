{"version":3,"file":"default-src_app_authentification_authentication_module_ts.js","mappings":"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","sources":["./src/app/authentification/authentication.module.ts","./src/app/authentification/common/select-language/select-language.component.ts","./src/app/authentification/common/select-language/select-language.component.html","./src/app/authentification/forgot-password/forgot-password.component.ts","./src/app/authentification/forgot-password/forgot-password.component.html","./src/app/authentification/login/login.component.ts","./src/app/authentification/login/login.component.html","./src/app/authentification/other-auth-pages/verified-mail/verified-mail.component.ts","./src/app/authentification/other-auth-pages/verified-mail/verified-mail.component.html","./src/app/authentification/reset-password/reset-password.component.ts","./src/app/authentification/reset-password/reset-password.component.html","./src/app/authentification/signup/signup.component.ts","./src/app/authentification/signup/signup.component.html","./src/app/models/response-model.ts"],"sourcesContent":["import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\nimport { CoreCommonModule } from \"@core/common.module\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { ResetPasswordComponent } from \"./reset-password/reset-password.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\r\nimport { VerifiedMailComponent } from \"./other-auth-pages/verified-mail/verified-mail.component\";\r\nimport { ToastrComponent } from \"app/common/toastr/toastr.component\";\r\nimport { HttpLoaderFactory } from \"app/services/httpLoaderFactory\";\r\nimport { HttpClient } from \"@angular/common/http\";\nimport { SelectLanguageComponent } from './common/select-language/select-language.component';\r\n\r\n// routing\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"login\",\r\n    pathMatch: \"full\",\r\n  },\r\n  {\r\n    path: \"login\",\r\n    component: LoginComponent,\r\n    data: { animation: \"auth\" },\r\n  },\r\n  {\r\n    path: \"signup\",\r\n    component: SignupComponent,\r\n    data: { animation: \"auth\" },\r\n  },\r\n  {\r\n    path: \"forgot-password\",\r\n    component: ForgotPasswordComponent,\r\n  },\r\n  {\r\n    path: \"reset-password/:email\",\r\n    component: ResetPasswordComponent,\r\n  },\r\n  {\r\n    path: \"verified-mail/:email\",\r\n    component: VerifiedMailComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignupComponent,\r\n    ResetPasswordComponent,\r\n    ForgotPasswordComponent,\r\n    VerifiedMailComponent,\r\n    SelectLanguageComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    NgbModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CoreCommonModule,\r\n    TranslateModule.forChild({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient],\r\n      },\r\n    }),\r\n  ],\r\n  providers: [ToastrComponent],\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Component } from \"@angular/core\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport languages from \"../../../../assets/configurations/i18n/languages.json\";\nimport * as _ from \"lodash\";\nimport { CoreConfigService } from \"@core/services/config.service\";\n\n@Component({\n  selector: \"app-select-language\",\n  templateUrl: \"./select-language.component.html\",\n  styleUrls: [\"./select-language.component.scss\"],\n})\nexport class SelectLanguageComponent {\n  public languageOptions: any;\n  public selectedLanguage: any;\n\n  constructor(\n    public _translateService: TranslateService,\n    private _coreConfigService: CoreConfigService\n  ) {}\n\n  ngOnInit() {\n    this.languageOptions = languages;\n    // Set the selected language from default languageOptions\n    this.selectedLanguage = _.find(this.languageOptions, {\n      id: this._translateService.currentLang,\n    });\n  }\n\n  setLanguage(language): void {\n    // Set the selected language for the navbar on change\n    this.selectedLanguage = language;\n\n    // Use the selected language id for translations\n    this._translateService.use(language);\n    this._translateService.setDefaultLang(language);\n\n    this._coreConfigService.setConfig(\n      {\n        app: { appLanguage: language },\n        layout: {\n          enableLocalStorage: true,\n          footer: { hidden: false },\n          menu: { hidden: false },\n          navbar: { hidden: false },\n        },\n      },\n      { emitEvent: false }\n    );\n  }\n}\n","<div ngbDropdown class=\"nav-item dropdown dropdown-language\">\n    <a class=\"nav-link dropdown-toggle\" id=\"dropdown-flag\" ngbDropdownToggle>\n        <i class=\"flag-icon flag-icon-{{ languageOptions[_translateService.currentLang].flag }}\"></i><span\n            class=\"selected-language\">{{ languageOptions[_translateService.currentLang].title }}</span></a>\n    <div ngbDropdownMenu aria-labelledby=\"dropdown-flag\">\n        <a *ngFor=\"let lang of _translateService.getLangs()\" ngbDropdownItem (click)=\"setLanguage(lang)\">\n            <i class=\"flag-icon flag-icon-{{ languageOptions[lang].flag }}\"></i> {{ languageOptions[lang].title }}\n        </a>\n    </div>\n</div>","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport {\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\n\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { CallApiService } from \"app/services/call-api.service\";\r\nimport { ResponseModel } from \"app/models/response-model\";\r\n\r\n@Component({\r\n  selector: \"app-forgot-password\",\r\n  templateUrl: \"./forgot-password.component.html\",\r\n  styleUrls: [\"./forgot-password.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  // Public\r\n  public emailVar;\r\n  public coreConfig: any;\r\n  public forgotPasswordForm: UntypedFormGroup;\r\n  public submitted = false;\r\n  public response = new ResponseModel();\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   * @param {FormBuilder} _formBuilder\r\n   *\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _formBuilder: UntypedFormBuilder,\r\n    private _service: CallApiService\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.forgotPasswordForm.controls;\r\n  }\r\n\r\n  /**\r\n   * On Submit\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.forgotPasswordForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.sendResetLink();\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    this.forgotPasswordForm = this._formBuilder.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n    });\r\n\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  sendResetLink() {\r\n    this.response = new ResponseModel();\r\n    this._service\r\n      .callPostMethod(\"/api/forgotPassword\", this.forgotPasswordForm.value)\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.response.sendLinkForResetOnMail = true;\r\n        } else {\r\n          this.response.mailNotExists = true;\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"auth-wrapper auth-v2\">\r\n    <div class=\"auth-inner row m-0\">\r\n        <!-- Brand logo--><a class=\"brand-logo\" href=\"javascript:void(0);\">\r\n            <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n            <h2 class=\"brand-text text-primary ml-1\">{{ coreConfig.app.appName }}</h2>\r\n        </a>\r\n        <!-- /Brand logo-->\r\n        <!-- Left Text-->\r\n        <div class=\"d-none d-lg-flex col-lg-8 align-items-center p-5\">\r\n            <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\r\n                <img class=\"img-fluid\" [src]=\"\r\n              coreConfig.layout.skin === 'dark'\r\n                ? 'assets/images/pages/forgot-password-v2-dark.svg'\r\n                : 'assets/images/pages/forgot-password-v2.svg'\r\n            \" alt=\"Forgot password V2\" />\r\n            </div>\r\n        </div>\r\n        <!-- /Left Text-->\r\n        <!-- Forgot password-->\r\n        <div class=\"d-flex col-lg-4 align-items-center auth-bg px-2 p-lg-5\">\r\n\r\n            <app-select-language></app-select-language>\r\n\r\n            <div class=\"col-12 col-sm-8 col-md-6 col-lg-12 px-xl-2 mx-auto\">\r\n                <h2 class=\"card-title font-weight-bold mb-1\">{{'forgot.title' | translate}}</h2>\r\n                <p class=\"card-text mb-2\">{{'forgot.text' | translate}}</p>\r\n                <form class=\"auth-forgot-password-form mt-2\" [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"forgot-password-email\">{{'commonFields.email' |\r\n                            translate}}</label>\r\n                        <input class=\"form-control\" type=\"text\" formControlName=\"email\" placeholder=\"john@example.com\"\r\n                            aria-describedby=\"forgot-password-email\" autofocus=\"\" tabindex=\"1\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                    </div>\r\n                    <!-- NOT SUCCESSFULY MESSAGE -->\r\n\r\n                    <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.email.errors.required\">{{'form.emailIsRequired' | translate}}</div>\r\n                        <div *ngIf=\"f.email.errors.email\">{{'form.emailMustBeValid' | translate}}</div>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"response.mailNotExists\" class=\"text-center\">\r\n                        <p class=\"badge badge-light-danger badge-pill full-width p-1\">{{'forgot.mailNotExists' |\r\n                            translate}}</p>\r\n                    </div>\r\n\r\n                    <!-- END NOT SUCCESSFULY MESSAGE -->\r\n\r\n                    <!-- SUCCESSFULY MESSAGE -->\r\n                    <div *ngIf=\"response.sendLinkForResetOnMail\" class=\"text-center\">\r\n                        <p class=\"badge badge-light-success badge-pill full-width p-1 white-space-break\">\r\n                            {{'forgot.sendLinkForResetOnMail' |\r\n                            translate}}</p>\r\n                    </div>\r\n                    <!-- END SUCCESSFULY MESSAGE -->\r\n                    <button class=\"btn btn-primary btn-block\" tabindex=\"2\" rippleEffect>{{'forgot.sendResetLink' |\r\n                        translate}}</button>\r\n                </form>\r\n                <p class=\"text-center mt-2\">\r\n                    <a routerLink=\"/auth/login\"><i data-feather=\"chevron-left\" class=\"mb-25\"></i>\r\n                        {{'authGlobal.backToLogin' | translate}}</a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <!-- /Forgot password-->\r\n    </div>\r\n</div>","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { CallApiService } from \"app/services/call-api.service\";\r\nimport { StorageService } from \"app/services/storage.service\";\r\n\r\n@Component({\r\n  selector: \"login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  //  Public\r\n  public coreConfig: any;\r\n  public loginForm: UntypedFormGroup;\r\n  public loading = false;\r\n  public submitted = false;\r\n  public returnUrl: string;\r\n  public error = \"\";\r\n  public passwordTextType: boolean;\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _formBuilder: UntypedFormBuilder,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _service: CallApiService,\r\n    private _storageService: StorageService\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  /**\r\n   * Toggle password\r\n   */\r\n  togglePasswordTextType() {\r\n    this.passwordTextType = !this.passwordTextType;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    // Login\r\n    this.loading = true;\r\n\r\n    this._service\r\n      .callPostMethod(\"/api/login\", this.loginForm.value)\r\n      .subscribe((data: any) => {\r\n        if (data && data.token) {\r\n          this._storageService.setToken(data.token);\r\n          const user = this._storageService.getDecodeToken();\r\n          if (!user.firstname || !user.lastname) {\r\n            // this._router.navigate([\"wizard\"]);\r\n            window.open(\"wizard\", \"_self\");\r\n          } else {\r\n            // this._router.navigate([\"dashboard/admin\"]);\r\n            window.open(\"dashboard/admin\", \"_self\");\r\n          }\r\n          this.loading = false;\r\n        } else {\r\n          this.error = data.type;\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    this.loginForm = this._formBuilder.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      password: [\"\", Validators.required],\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this._route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n}\r\n","<div class=\"auth-wrapper auth-v2\">\r\n  <div class=\"auth-inner row m-0\">\r\n    <!-- Brand logo--><a class=\"brand-logo\" href=\"javascript:void(0);\">\r\n      <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n      <h2 class=\"brand-text text-primary ml-1\">{{ coreConfig.app.appName }}</h2>\r\n    </a>\r\n    <!-- /Brand logo-->\r\n    <!-- Left Text-->\r\n    <div class=\"d-none d-lg-flex col-lg-8 align-items-center p-5\">\r\n      <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\r\n        <img class=\"img-fluid\" [src]=\"\r\n            coreConfig.layout.skin === 'dark'\r\n              ? 'assets/images/pages/login-v2-dark.svg'\r\n              : 'assets/images/pages/login-v2.svg'\r\n          \" alt=\"Login V2\" />\r\n      </div>\r\n    </div>\r\n    <!-- /Left Text-->\r\n    <!-- Login-->\r\n    <div class=\"d-flex col-lg-4 align-items-center auth-bg px-2 p-lg-5\">\r\n      <app-select-language></app-select-language>\r\n\r\n      <div class=\"col-12 col-sm-8 col-md-6 col-lg-12 px-xl-2 mx-auto\">\r\n        <h2 class=\"card-title font-weight-bold mb-1\">{{'login.title' | translate}}</h2>\r\n        <p class=\"card-text mb-2\">{{'login.subtitle' | translate}}</p>\r\n\r\n        <ngb-alert [type]=\"'danger'\" [dismissible]=\"false\" *ngIf=\"error\">\r\n          <div class=\"alert-body\">\r\n            <p *ngIf=\"error === 'verified'\">{{ 'login.verifiedError' | translate }}</p>\r\n            <p *ngIf=\"error === 'active'\">{{ 'login.activeError' | translate }}</p>\r\n            <p *ngIf=\"error === 'exist'\">{{ 'login.notExistsError' | translate }}</p>\r\n          </div>\r\n        </ngb-alert>\r\n\r\n        <form class=\"auth-login-form mt-2\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\" for=\"login-email\">Email</label>\r\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\"\r\n              [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" placeholder=\"admin@demo.com\"\r\n              aria-describedby=\"login-email\" autofocus=\"\" tabindex=\"1\" />\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.email.errors.required\">{{'login.emailIsRequired' | translate}}</div>\r\n              <div *ngIf=\"f.email.errors.email\">{{'login.emailMustBeValid' | translate}}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              <label for=\"login-password\">{{'login.password' | translate}}</label><a\r\n                routerLink=\"/auth/forgot-password\"><small>{{'login.forgotPassword' | translate}}</small></a>\r\n            </div>\r\n            <div class=\"input-group input-group-merge form-password-toggle\">\r\n              <input [type]=\"passwordTextType ? 'text' : 'password'\" formControlName=\"password\"\r\n                class=\"form-control form-control-merge\"\r\n                [ngClass]=\"{ 'is-invalid error': submitted && f.password.errors }\" placeholder=\"············\"\r\n                aria-describedby=\"login-password\" tabindex=\"2\" />\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text cursor-pointer\"><i class=\"feather font-small-4\" [ngClass]=\"{\r\n                      'icon-eye-off': passwordTextType,\r\n                      'icon-eye': !passwordTextType\r\n                    }\" (click)=\"togglePasswordTextType()\"></i></span>\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\"\r\n              [ngClass]=\"{ 'd-block': submitted && f.password.errors }\">\r\n              <div *ngIf=\"f.password.errors.required\">{{'login.passwordIsRequired' | translate}}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"custom-control custom-checkbox\">\r\n              <input class=\"custom-control-input\" id=\"remember-me\" type=\"checkbox\" tabindex=\"3\" />\r\n              <label class=\"custom-control-label\" for=\"remember-me\"> {{'login.rememberMe' | translate}}</label>\r\n            </div>\r\n          </div>\r\n          <button [disabled]=\"loading\" class=\"btn btn-primary btn-block\" tabindex=\"4\" rippleEffect>\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>{{'login.signIn' | translate}}\r\n          </button>\r\n        </form>\r\n        <p class=\"text-center mt-2\">\r\n          <span>{{'login.newOnPlatform' | translate}}</span><a\r\n            routerLink=\"/auth/signup\"><span>&nbsp;{{'login.createAnAccount' |\r\n              translate}}</span></a>\r\n        </p>\r\n        <div class=\"divider my-2\">\r\n          <div class=\"divider-text\">or</div>\r\n        </div>\r\n        <div class=\"auth-footer-btn d-flex justify-content-center\">\r\n          <a class=\"btn btn-facebook\" href=\"javascript:void(0)\"><i data-feather=\"facebook\"></i></a><a\r\n            class=\"btn btn-twitter white\" href=\"javascript:void(0)\"><i data-feather=\"twitter\"></i></a><a\r\n            class=\"btn btn-google\" href=\"javascript:void(0)\"><i data-feather=\"mail\"></i></a><a class=\"btn btn-github\"\r\n            href=\"javascript:void(0)\"><i data-feather=\"github\"></i></a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- /Login-->\r\n  </div>\r\n</div>","import { Component, ViewEncapsulation } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { CallApiService } from \"app/services/call-api.service\";\r\nimport { Subject } from \"rxjs\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"app-verified-mail\",\r\n  templateUrl: \"./verified-mail.component.html\",\r\n  styleUrls: [\"./verified-mail.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class VerifiedMailComponent {\r\n  // Public\r\n  public coreConfig: any;\r\n  public display = false;\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   * @param {FormBuilder} _formBuilder\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _service: CallApiService,\r\n    private _activateRouter: ActivatedRoute,\r\n    private _router: Router\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n\r\n    this._service\r\n      .callGetMethod(\r\n        \"/api/checkIfMailVerified\",\r\n        this._activateRouter.snapshot.params.email\r\n      )\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(\r\n        (data) => {\r\n          this.display = true;\r\n          if (data) {\r\n            return;\r\n          } else {\r\n            this._router.navigate([\"/miscellaneous/something-happened\"]);\r\n          }\r\n        },\r\n        (error) => {\r\n          this._router.navigate([\"/miscellaneous/something-happened\"]);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<!-- Under maintenance-->\r\n<div class=\"misc-wrapper\" *ngIf=\"display\">\r\n    <!-- Brand logo--><a class=\"brand-logo d-flex p-2\" href=\"javascript:void(0);\">\r\n        <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n        <h2 class=\"brand-text text-primary ml-1\">{{ coreConfig.app.appName }}</h2>\r\n    </a>\r\n    <div class=\"misc-inner p-2 p-sm-3\">\r\n        <div class=\"w-100 text-center\">\r\n            <h2 class=\"mb-1\">{{'verifiedMail.title' | translate}} </h2>\r\n            <p class=\"mb-3\">{{'verifiedMail.text' | translate}}\r\n            </p>\r\n            <form class=\"row row-cols-md-auto row justify-content-center align-items-center m-0 mb-2 gx-3\"\r\n                action=\"javascript:void(0)\">\r\n                <div class=\"col-12 d-md-block d-grid ps-md-0 ps-auto\">\r\n                    <button routerLink=\"/auth/login\" class=\"btn btn-primary mb-1 btn-sm-block\"\r\n                        type=\"submit\">{{'verifiedMail.goToLogin' |\r\n                        translate}}</button>\r\n                </div>\r\n            </form><img class=\"img-fluid\" src=\"../../../../assets/images/illustration/verified-mail.png\"\r\n                alt=\"Under maintenance page\" />\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- / Under maintenance-->","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport {\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\n\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { CallApiService } from \"app/services/call-api.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { ResponseModel } from \"app/models/response-model\";\r\n\r\n@Component({\r\n  selector: \"app-reset-password\",\r\n  templateUrl: \"./reset-password.component.html\",\r\n  styleUrls: [\"./reset-password.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  public coreConfig: any;\r\n  public passwordTextType: boolean;\r\n  public confPasswordTextType: boolean;\r\n  public resetPasswordForm: UntypedFormGroup;\r\n  public submitted = false;\r\n  public response = new ResponseModel();\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   * @param {FormBuilder} _formBuilder\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _formBuilder: UntypedFormBuilder,\r\n    private _service: CallApiService,\r\n    private _activateRouter: ActivatedRoute,\r\n    private _router: Router\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.resetPasswordForm.controls;\r\n  }\r\n\r\n  /**\r\n   * Toggle password\r\n   */\r\n  togglePasswordTextType() {\r\n    this.passwordTextType = !this.passwordTextType;\r\n  }\r\n\r\n  /**\r\n   * Toggle confirm password\r\n   */\r\n  toggleConfPasswordTextType() {\r\n    this.confPasswordTextType = !this.confPasswordTextType;\r\n  }\r\n\r\n  /**\r\n   * On Submit\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.resetPasswordForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.resetPassword();\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    this.resetPasswordForm = this._formBuilder.group({\r\n      newPassword: [\"\", [Validators.required]],\r\n      confirmPassword: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n\r\n    this.checkIfMailExists();\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  checkIfMailExists() {\r\n    this._service\r\n      .callGetMethod(\r\n        \"/api/checkIfMailExists\",\r\n        this._activateRouter.snapshot.params.email\r\n      )\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(\r\n        (data) => {\r\n          if (data) {\r\n            return;\r\n          } else {\r\n            this._router.navigate([\"/miscellaneous/something-happened\"]);\r\n          }\r\n        },\r\n        (error) => {\r\n          this._router.navigate([\"/miscellaneous/something-happened\"]);\r\n        }\r\n      );\r\n  }\r\n\r\n  resetPassword() {\r\n    this.response = new ResponseModel();\r\n    if (\r\n      this.resetPasswordForm.value.newPassword ===\r\n      this.resetPasswordForm.value.confirmPassword\r\n    ) {\r\n      const body = {\r\n        password: this.resetPasswordForm.value.newPassword,\r\n        email: this._activateRouter.snapshot.params.email,\r\n      };\r\n      this._service\r\n        .callPostMethod(\"/api/resetPassword\", body)\r\n        .subscribe((data) => {\r\n          if (data) {\r\n            this.response.changedPasswordSuccessfuly = true;\r\n            setTimeout(() => {\r\n              this._router.navigate([\"/auth/login\"]);\r\n            }, 3000);\r\n          }\r\n        });\r\n    } else {\r\n      this.response.passwordNotMatch = true;\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-wrapper auth-v2\">\r\n    <div class=\"auth-inner row m-0\">\r\n        <!-- Brand logo--><a class=\"brand-logo\" href=\"javascript:void(0);\">\r\n            <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n            <h2 class=\"brand-text text-primary ml-1\">{{ coreConfig.app.appName }}</h2>\r\n        </a>\r\n        <!-- /Brand logo-->\r\n        <!-- Left Text-->\r\n        <div class=\"d-none d-lg-flex col-lg-8 align-items-center p-5\">\r\n            <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\r\n                <img [src]=\"\r\n              coreConfig.layout.skin === 'dark'\r\n                ? 'assets/images/pages/reset-password-v2-dark.svg'\r\n                : 'assets/images/pages/reset-password-v2.svg'\r\n            \" img-fluid=\"img-fluid\" alt=\"Register V2\" />\r\n            </div>\r\n        </div>\r\n        <!-- /Left Text-->\r\n        <!-- Reset password-->\r\n        <div class=\"d-flex col-lg-4 align-items-center auth-bg px-2 p-lg-5\">\r\n\r\n            <app-select-language></app-select-language>\r\n\r\n            <div class=\"col-12 col-sm-8 col-md-6 col-lg-12 px-xl-2 mx-auto\">\r\n                <h2 class=\"card-title font-weight-bold mb-1\">{{'resetPassword.title' | translate}}</h2>\r\n                <p class=\"card-text mb-2\">{{'resetPassword.text' | translate}}</p>\r\n                <form class=\"auth-reset-password-form mt-2\" [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"d-flex justify-content-between\">\r\n                            <label for=\"reset-password-new\">{{'resetPassword.newPassword' | translate}}</label>\r\n                        </div>\r\n                        <div class=\"input-group input-group-merge form-password-toggle\">\r\n                            <input [type]=\"passwordTextType ? 'text' : 'password'\" formControlName=\"newPassword\"\r\n                                class=\"form-control form-control-merge\" placeholder=\"············\"\r\n                                aria-describedby=\"reset-password-new\" tabindex=\"1\" autofocus\r\n                                [ngClass]=\"{ 'is-invalid error': submitted && f.newPassword.errors }\" />\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text cursor-pointer\"><i class=\"feather font-small-4\" [ngClass]=\"{\r\n                        'icon-eye-off': passwordTextType,\r\n                        'icon-eye': !passwordTextType\r\n                      }\" (click)=\"togglePasswordTextType()\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"submitted && f.newPassword.errors\" class=\"invalid-feedback\"\r\n                            [ngClass]=\"{ 'd-block': submitted && f.newPassword.errors }\">\r\n                            <div *ngIf=\"f.newPassword.errors.required\">{{'form.passwordIsRequired' | translate}}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"d-flex justify-content-between\">\r\n                            <label for=\"reset-password-confirm\">{{'resetPassword.confirmPassword' | translate}}</label>\r\n                        </div>\r\n                        <div class=\"input-group input-group-merge form-password-toggle\">\r\n                            <input [type]=\"confPasswordTextType ? 'text' : 'password'\" formControlName=\"confirmPassword\"\r\n                                class=\"form-control form-control-merge\" placeholder=\"············\"\r\n                                aria-describedby=\"reset-password-confirm\" tabindex=\"2\"\r\n                                [ngClass]=\"{ 'is-invalid error': submitted && f.confirmPassword.errors }\" />\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text cursor-pointer\"><i class=\"feather font-small-4\" [ngClass]=\"{\r\n                        'icon-eye-off': confPasswordTextType,\r\n                        'icon-eye': !confPasswordTextType\r\n                      }\" (click)=\"toggleConfPasswordTextType()\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\"\r\n                            [ngClass]=\"{ 'd-block': submitted && f.confirmPassword.errors }\">\r\n                            <div *ngIf=\"f.confirmPassword.errors.required\">{{'form.passwordIsRequired' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- NOT SUCCESSFULY MESSAGE -->\r\n\r\n                    <div *ngIf=\"response.passwordNotMatch\" class=\"text-center\">\r\n                        <p class=\"badge badge-light-danger badge-pill full-width p-1\">{{'resetPassword.passwordNotMatch'\r\n                            |\r\n                            translate}}</p>\r\n                    </div>\r\n\r\n                    <!-- END NOT SUCCESSFULY MESSAGE -->\r\n\r\n                    <!-- SUCCESSFULY MESSAGE -->\r\n                    <div *ngIf=\"response.changedPasswordSuccessfuly\" class=\"text-center\">\r\n                        <p class=\"badge badge-light-success badge-pill full-width p-1 white-space-break\">\r\n                            {{'resetPassword.changedPasswordSuccessfuly' |\r\n                            translate}}</p>\r\n                    </div>\r\n                    <!-- END SUCCESSFULY MESSAGE -->\r\n\r\n                    <button class=\"btn btn-primary btn-block\" tabindex=\"3\" rippleEffect>{{'resetPassword.setNewPassword'\r\n                        | translate}}</button>\r\n                </form>\r\n                <p class=\"text-center mt-2\">\r\n                    <a routerLink=\"/auth/login\"><i data-feather=\"chevron-left\" class=\"mb-25\"></i>\r\n                        {{'authGlobal.backToLogin' | translate}}</a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <!-- /Reset password-->\r\n    </div>\r\n</div>","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport {\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\n\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { CallApiService } from \"app/services/call-api.service\";\r\nimport { ResponseModel } from \"app/models/response-model\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { ToastrComponent } from \"app/common/toastr/toastr.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  // Public\r\n  public coreConfig: any;\r\n  public passwordTextType: boolean;\r\n  public registerForm: UntypedFormGroup;\r\n  public submitted = false;\r\n  public response = new ResponseModel();\r\n  public loading = false;\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   * @param {FormBuilder} _formBuilder\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _formBuilder: UntypedFormBuilder,\r\n    private _service: CallApiService,\r\n    private _router: Router,\r\n    private _activatedRouter: ActivatedRoute,\r\n    private _toastr: ToastrComponent,\r\n    private _translate: TranslateService\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.registerForm.controls;\r\n  }\r\n\r\n  /**\r\n   * Toggle password\r\n   */\r\n  togglePasswordTextType() {\r\n    this.passwordTextType = !this.passwordTextType;\r\n  }\r\n\r\n  /**\r\n   * On Submit\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.signUp(this.registerForm.value);\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    this.registerForm = this._formBuilder.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      password: [\"\", Validators.required],\r\n      rePassword: [\"\", Validators.required],\r\n    });\r\n\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n    this.validateRecommenedBonusLink();\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  //#region\r\n\r\n  signUp(data: any) {\r\n    this.response = new ResponseModel();\r\n    this.loading = true;\r\n    if (data.password === data.rePassword) {\r\n      this._service.callPostMethod(\"/api/signUp\", data).subscribe((data) => {\r\n        if (data) {\r\n          this.response.verifyYourMail = true;\r\n          this.loading = false;\r\n          this.createRecommendedBonus();\r\n          setTimeout(() => {\r\n            this._router.navigate([\"/auth/login\"]);\r\n          }, 6000);\r\n        } else {\r\n          this.loading = false;\r\n          this.response.mailExists = true;\r\n        }\r\n      });\r\n    } else {\r\n      this.loading = false;\r\n      this.response.passwordNotMatch = true;\r\n    }\r\n  }\r\n\r\n  validateRecommenedBonusLink() {\r\n    const id = this._activatedRouter.snapshot.queryParams.id;\r\n    if (id) {\r\n      this._service\r\n        .callGetMethod(\"/api/validateRecommenedBonusLink\", id)\r\n        .subscribe((data) => {\r\n          if (!data) {\r\n            this._router.navigate([\"/auth/signup\"]);\r\n            this._toastr.showErrorCustom(\r\n              this._translate.instant(\"recommended.wrongRecommendedBonusLink\")\r\n            );\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  createRecommendedBonus() {\r\n    const id = this._activatedRouter.snapshot.queryParams.id;\r\n    if (id) {\r\n      this._service\r\n        .callPostMethod(\"/api/createRecommendedBonus\", { id: id })\r\n        .subscribe((data) => {});\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n}\r\n","<div class=\"auth-wrapper auth-v2\">\r\n    <div class=\"auth-inner row m-0\">\r\n        <!-- Brand logo--><a class=\"brand-logo\" href=\"javascript:void(0);\">\r\n            <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n            <h2 class=\"brand-text text-primary ml-1\">{{ coreConfig.app.appName }}</h2>\r\n        </a>\r\n        <!-- /Brand logo-->\r\n        <!-- Left Text-->\r\n        <div class=\"d-none d-lg-flex col-lg-8 align-items-center p-5\">\r\n            <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\r\n                <img class=\"img-fluid\" [src]=\"\r\n              coreConfig.layout.skin === 'dark'\r\n                ? 'assets/images/pages/register-v2-dark.svg'\r\n                : 'assets/images/pages/register-v2.svg'\r\n            \" alt=\"Register V2\" />\r\n            </div>\r\n        </div>\r\n        <!-- /Left Text-->\r\n        <!-- Register-->\r\n        <div class=\"d-flex col-lg-4 align-items-center auth-bg px-2 p-lg-5\">\r\n\r\n            <app-select-language></app-select-language>\r\n\r\n            <div class=\"col-12 col-sm-8 col-md-6 col-lg-12 px-xl-2 mx-auto\">\r\n                <h2 class=\"card-title font-weight-bold mb-1\">{{'signUp.title' | translate}}</h2>\r\n                <p class=\"card-text mb-2\">{{'signUp.text' | translate}}</p>\r\n                <form class=\"auth-register-form mt-2\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"register-email\" class=\"form-label\">{{'commonFields.email' | translate}}</label>\r\n                        <input type=\"text\" formControlName=\"email\" class=\"form-control\" placeholder=\"email@termmy.com\"\r\n                            aria-describedby=\"register-email\" tabindex=\"2\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"f.email.errors.required\">{{'form.emailIsRequired' | translate}}</div>\r\n                            <div *ngIf=\"f.email.errors.email\">{{'form.emailMustBeValid' | translate}}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"register-password\" class=\"form-label\">{{'commonFields.password' |\r\n                            translate}}</label>\r\n\r\n                        <div class=\"input-group input-group-merge form-password-toggle\">\r\n                            <input [type]=\"passwordTextType ? 'text' : 'password'\" formControlName=\"password\"\r\n                                class=\"form-control form-control-merge\" placeholder=\"············\"\r\n                                aria-describedby=\"register-password\" tabindex=\"3\"\r\n                                [ngClass]=\"{ 'is-invalid error': submitted && f.password.errors }\" />\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text cursor-pointer\"><i class=\"feather font-small-4\" [ngClass]=\"{\r\n                        'icon-eye-off': passwordTextType,\r\n                        'icon-eye': !passwordTextType\r\n                      }\" (click)=\"togglePasswordTextType()\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\"\r\n                            [ngClass]=\"{ 'd-block': submitted && f.password.errors }\">\r\n                            <div *ngIf=\"f.password.errors.required\">{{'form.passwordIsRequired'}}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"register-password\" class=\"form-label\">{{'commonFields.rePassword' |\r\n                            translate}}</label>\r\n\r\n                        <div class=\"input-group input-group-merge form-password-toggle\">\r\n                            <input [type]=\"passwordTextType ? 'text' : 'password'\" formControlName=\"rePassword\"\r\n                                class=\"form-control form-control-merge\" placeholder=\"············\"\r\n                                aria-describedby=\"register-password\" tabindex=\"3\"\r\n                                [ngClass]=\"{ 'is-invalid error': submitted && f.password.errors }\" />\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text cursor-pointer\"><i class=\"feather font-small-4\" [ngClass]=\"{\r\n                        'icon-eye-off': passwordTextType,\r\n                        'icon-eye': !passwordTextType\r\n                      }\" (click)=\"togglePasswordTextType()\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\"\r\n                            [ngClass]=\"{ 'd-block': submitted && f.password.errors }\">\r\n                            <div *ngIf=\"f.password.errors.required\">{{'signUp.passwordIsRequired'}}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"custom-control custom-checkbox\">\r\n                            <input class=\"custom-control-input\" type=\"checkbox\" id=\"register-privacy-policy\"\r\n                                tabindex=\"4\" />\r\n                            <label class=\"custom-control-label\" for=\"register-privacy-policy\">\r\n                                {{'signUp.IAgreeTo' | translate}} <a href=\"javascript:void(0);\">{{'signUp.privacy' |\r\n                                    translate}}</a>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <!-- LABELS -->\r\n                    <div>\r\n\r\n                        <!-- NOT SUCCESSFULY MESSAGE -->\r\n\r\n                        <div *ngIf=\"submitted && registerForm.invalid\" class=\"text-center\">\r\n                            <p class=\"badge badge-light-danger badge-pill full-width p-1\">{{'signUp.fillRequredFields' |\r\n                                translate}}</p>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"response.mailExists\" class=\"text-center\">\r\n                            <p class=\"badge badge-light-danger badge-pill full-width p-1 white-space-break\">\r\n                                {{'signUp.mailExists' |\r\n                                translate}}</p>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"response.passwordNotMatch\" class=\"text-center\">\r\n                            <p class=\"badge badge-light-danger badge-pill full-width p-1 white-space-break\">\r\n                                {{'signUp.passwordNotMatch' |\r\n                                translate}}</p>\r\n                        </div>\r\n\r\n                        <!-- END NOT SUCCESSFULY MESSAGE -->\r\n\r\n                        <!-- SUCCESSFULY MESSAGE -->\r\n\r\n                        <div *ngIf=\"response.verifyYourMail\" class=\"text-center\">\r\n                            <p class=\"badge badge-light-success badge-pill full-width p-1 white-space-break\">\r\n                                {{'signUp.verifyYouMail' |\r\n                                translate}}</p>\r\n                        </div>\r\n\r\n                        <!-- END SUCCESSFULY MESSAGE -->\r\n                    </div>\r\n                    <!-- END LABELS -->\r\n                    <button class=\"btn btn-primary btn-block\" tabindex=\"5\" rippleEffect> <span *ngIf=\"loading\"\r\n                            class=\"spinner-border spinner-border-sm mr-1\"></span>{{'signUp.signUp' |\r\n                        translate}}</button>\r\n                </form>\r\n                <p class=\"text-center mt-2\">\r\n                    <span>{{'signUp.alreadyHaveAnAccount' | translate}}</span><a\r\n                        routerLink=\"/auth/login\"><span>&nbsp;{{'signUp.signInInstead' | translate}}</span></a>\r\n                </p>\r\n                <!-- <div class=\"divider my-2\">\r\n                    <div class=\"divider-text\">or</div>\r\n                </div>\r\n                <div class=\"auth-footer-btn d-flex justify-content-center\">\r\n                    <a class=\"btn btn-facebook\" href=\"javascript:void(0)\"><i data-feather=\"facebook\"></i></a><a\r\n                        class=\"btn btn-twitter white\" href=\"javascript:void(0)\"><i data-feather=\"twitter\"></i></a><a\r\n                        class=\"btn btn-google\" href=\"javascript:void(0)\"><i data-feather=\"mail\"></i></a><a\r\n                        class=\"btn btn-github\" href=\"javascript:void(0)\"><i data-feather=\"github\"></i></a>\r\n                </div> -->\r\n            </div>\r\n        </div>\r\n        <!-- /Register-->\r\n    </div>\r\n</div>","export class ResponseModel {\r\n  mailExists: boolean;\r\n  mailNotExists: boolean;\r\n  verifyYourMail: boolean;\r\n  passwordNotMatch: boolean;\r\n  sendLinkForResetOnMail: boolean;\r\n  changedPasswordSuccessfuly: boolean;\r\n}\r\n"],"names":["CommonModule","FormsModule","ReactiveFormsModule","RouterModule","NgbModule","CoreCommonModule","LoginComponent","SignupComponent","ResetPasswordComponent","ForgotPasswordComponent","TranslateLoader","TranslateModule","VerifiedMailComponent","ToastrComponent","HttpLoaderFactory","HttpClient","SelectLanguageComponent","routes","path","redirectTo","pathMatch","component","data","animation","AuthenticationModule","_","_2","_3","imports","forChild","loader","provide","useFactory","deps","declarations","i1","i2","languages","i0","ɵɵelementStart","ɵɵlistener","SelectLanguageComponent_a_6_Template_a_click_0_listener","restoredCtx","ɵɵrestoreView","_r3","lang_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","setLanguage","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵclassMapInterpolate1","ctx_r0","languageOptions","flag","ɵɵtextInterpolate1","title","constructor","_translateService","_coreConfigService","ngOnInit","selectedLanguage","find","id","currentLang","language","use","setDefaultLang","setConfig","app","appLanguage","layout","enableLocalStorage","footer","hidden","menu","navbar","emitEvent","ɵɵdirectiveInject","TranslateService","CoreConfigService","selectors","decls","vars","consts","template","SelectLanguageComponent_Template","rf","ctx","ɵɵtemplate","SelectLanguageComponent_a_6_Template","ɵɵtextInterpolate","ɵɵproperty","getLangs","Validators","takeUntil","Subject","ResponseModel","ɵɵpipeBind1","ForgotPasswordComponent_div_24_div_1_Template","ForgotPasswordComponent_div_24_div_2_Template","f","email","errors","required","_formBuilder","_service","submitted","response","_unsubscribeAll","config","customizer","forgotPasswordForm","controls","onSubmit","invalid","sendResetLink","group","pipe","subscribe","coreConfig","ngOnDestroy","next","complete","callPostMethod","value","sendLinkForResetOnMail","mailNotExists","UntypedFormBuilder","i3","CallApiService","ForgotPasswordComponent_Template","ForgotPasswordComponent_Template_form_ngSubmit_18_listener","ForgotPasswordComponent_div_24_Template","ForgotPasswordComponent_div_25_Template","ForgotPasswordComponent_div_26_Template","ɵɵpropertyInterpolate","appLogoImage","ɵɵsanitizeUrl","appName","skin","ɵɵpureFunction1","_c0","LoginComponent_ngb_alert_18_p_2_Template","LoginComponent_ngb_alert_18_p_3_Template","LoginComponent_ngb_alert_18_p_4_Template","error","LoginComponent_div_24_div_1_Template","LoginComponent_div_24_div_2_Template","ctx_r1","LoginComponent_div_39_div_1_Template","password","_route","_router","_storageService","loading","loginForm","togglePasswordTextType","passwordTextType","token","setToken","user","getDecodeToken","firstname","lastname","window","open","type","returnUrl","snapshot","queryParams","ActivatedRoute","Router","i4","i5","StorageService","LoginComponent_Template","LoginComponent_ngb_alert_18_Template","LoginComponent_Template_form_ngSubmit_19_listener","LoginComponent_div_24_Template","LoginComponent_Template_i_click_38_listener","LoginComponent_div_39_Template","LoginComponent_span_47_Template","_c1","_c2","ɵɵpureFunction2","_c3","_activateRouter","display","callGetMethod","params","navigate","VerifiedMailComponent_Template","VerifiedMailComponent_div_0_Template","ResetPasswordComponent_div_29_div_1_Template","newPassword","ResetPasswordComponent_div_40_div_1_Template","confirmPassword","resetPasswordForm","toggleConfPasswordTextType","confPasswordTextType","resetPassword","checkIfMailExists","body","changedPasswordSuccessfuly","setTimeout","passwordNotMatch","ResetPasswordComponent_Template","ResetPasswordComponent_Template_form_ngSubmit_18_listener","ResetPasswordComponent_Template_i_click_28_listener","ResetPasswordComponent_div_29_Template","ResetPasswordComponent_Template_i_click_39_listener","ResetPasswordComponent_div_40_Template","ResetPasswordComponent_div_41_Template","ResetPasswordComponent_div_42_Template","SignupComponent_div_24_div_1_Template","SignupComponent_div_24_div_2_Template","SignupComponent_div_34_div_1_Template","SignupComponent_div_44_div_1_Template","_activatedRouter","_toastr","_translate","registerForm","signUp","rePassword","validateRecommenedBonusLink","verifyYourMail","createRecommendedBonus","mailExists","showErrorCustom","instant","i6","SignupComponent_Template","SignupComponent_Template_form_ngSubmit_18_listener","SignupComponent_div_24_Template","SignupComponent_Template_i_click_33_listener","SignupComponent_div_34_Template","SignupComponent_Template_i_click_43_listener","SignupComponent_div_44_Template","SignupComponent_div_55_Template","SignupComponent_div_56_Template","SignupComponent_div_57_Template","SignupComponent_div_58_Template","SignupComponent_span_60_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}