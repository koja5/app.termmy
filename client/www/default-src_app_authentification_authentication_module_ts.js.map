{"version":3,"file":"default-src_app_authentification_authentication_module_ts.js","mappings":"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","sources":["./src/app/authentification/authentication.module.ts","./src/app/authentification/forgot-password/forgot-password.component.ts","./src/app/authentification/forgot-password/forgot-password.component.html","./src/app/authentification/login/login.component.ts","./src/app/authentification/login/login.component.html","./src/app/authentification/other-auth-pages/verified-mail/verified-mail.component.ts","./src/app/authentification/other-auth-pages/verified-mail/verified-mail.component.html","./src/app/authentification/reset-password/reset-password.component.ts","./src/app/authentification/reset-password/reset-password.component.html","./src/app/authentification/signup/signup.component.ts","./src/app/authentification/signup/signup.component.html","./src/app/models/response-model.ts"],"sourcesContent":["import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\nimport { CoreCommonModule } from \"@core/common.module\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { ResetPasswordComponent } from \"./reset-password/reset-password.component\";\r\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\r\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\r\nimport { VerifiedMailComponent } from \"./other-auth-pages/verified-mail/verified-mail.component\";\r\nimport { ToastrComponent } from \"app/common/toastr/toastr.component\";\r\nimport { HttpLoaderFactory } from \"app/services/httpLoaderFactory\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n// routing\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"login\",\r\n    pathMatch: \"full\",\r\n  },\r\n  {\r\n    path: \"login\",\r\n    component: LoginComponent,\r\n    data: { animation: \"auth\" },\r\n  },\r\n  {\r\n    path: \"signup\",\r\n    component: SignupComponent,\r\n    data: { animation: \"auth\" },\r\n  },\r\n  {\r\n    path: \"forgot-password\",\r\n    component: ForgotPasswordComponent,\r\n  },\r\n  {\r\n    path: \"reset-password/:email\",\r\n    component: ResetPasswordComponent,\r\n  },\r\n  {\r\n    path: \"verified-mail/:email\",\r\n    component: VerifiedMailComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignupComponent,\r\n    ResetPasswordComponent,\r\n    ForgotPasswordComponent,\r\n    VerifiedMailComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    NgbModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CoreCommonModule,\r\n    TranslateModule.forChild({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient],\r\n      },\r\n    }),\r\n  ],\r\n  providers: [ToastrComponent],\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport {\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\n\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { CallApiService } from \"app/services/call-api.service\";\r\nimport { ResponseModel } from \"app/models/response-model\";\r\n\r\n@Component({\r\n  selector: \"app-forgot-password\",\r\n  templateUrl: \"./forgot-password.component.html\",\r\n  styleUrls: [\"./forgot-password.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  // Public\r\n  public emailVar;\r\n  public coreConfig: any;\r\n  public forgotPasswordForm: UntypedFormGroup;\r\n  public submitted = false;\r\n  public response = new ResponseModel();\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   * @param {FormBuilder} _formBuilder\r\n   *\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _formBuilder: UntypedFormBuilder,\r\n    private _service: CallApiService\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.forgotPasswordForm.controls;\r\n  }\r\n\r\n  /**\r\n   * On Submit\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.forgotPasswordForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.sendResetLink();\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    this.forgotPasswordForm = this._formBuilder.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n    });\r\n\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  sendResetLink() {\r\n    this.response = new ResponseModel();\r\n    this._service\r\n      .callPostMethod(\"/api/forgotPassword\", this.forgotPasswordForm.value)\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.response.sendLinkForResetOnMail = true;\r\n        } else {\r\n          this.response.mailNotExists = true;\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"auth-wrapper auth-v2\">\r\n    <div class=\"auth-inner row m-0\">\r\n        <!-- Brand logo--><a class=\"brand-logo\" href=\"javascript:void(0);\">\r\n            <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n            <h2 class=\"brand-text text-primary ml-1\">{{ coreConfig.app.appName }}</h2>\r\n        </a>\r\n        <!-- /Brand logo-->\r\n        <!-- Left Text-->\r\n        <div class=\"d-none d-lg-flex col-lg-8 align-items-center p-5\">\r\n            <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\r\n                <img class=\"img-fluid\" [src]=\"\r\n              coreConfig.layout.skin === 'dark'\r\n                ? 'assets/images/pages/forgot-password-v2-dark.svg'\r\n                : 'assets/images/pages/forgot-password-v2.svg'\r\n            \" alt=\"Forgot password V2\" />\r\n            </div>\r\n        </div>\r\n        <!-- /Left Text-->\r\n        <!-- Forgot password-->\r\n        <div class=\"d-flex col-lg-4 align-items-center auth-bg px-2 p-lg-5\">\r\n            <div class=\"col-12 col-sm-8 col-md-6 col-lg-12 px-xl-2 mx-auto\">\r\n                <h2 class=\"card-title font-weight-bold mb-1\">{{'forgot.title' | translate}}</h2>\r\n                <p class=\"card-text mb-2\">{{'forgot.text' | translate}}</p>\r\n                <form class=\"auth-forgot-password-form mt-2\" [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"forgot-password-email\">{{'commonFields.email' |\r\n                            translate}}</label>\r\n                        <input class=\"form-control\" type=\"text\" formControlName=\"email\" placeholder=\"john@example.com\"\r\n                            aria-describedby=\"forgot-password-email\" autofocus=\"\" tabindex=\"1\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                    </div>\r\n                    <!-- NOT SUCCESSFULY MESSAGE -->\r\n\r\n                    <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.email.errors.required\">{{'form.emailIsRequired' | translate}}</div>\r\n                        <div *ngIf=\"f.email.errors.email\">{{'form.emailMustBeValid' | translate}}</div>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"response.mailNotExists\" class=\"text-center\">\r\n                        <p class=\"badge badge-light-danger badge-pill full-width p-1\">{{'forgot.mailNotExists' |\r\n                            translate}}</p>\r\n                    </div>\r\n\r\n                    <!-- END NOT SUCCESSFULY MESSAGE -->\r\n\r\n                    <!-- SUCCESSFULY MESSAGE -->\r\n                    <div *ngIf=\"response.sendLinkForResetOnMail\" class=\"text-center\">\r\n                        <p class=\"badge badge-light-success badge-pill full-width p-1 white-space-break\">\r\n                            {{'forgot.sendLinkForResetOnMail' |\r\n                            translate}}</p>\r\n                    </div>\r\n                    <!-- END SUCCESSFULY MESSAGE -->\r\n                    <button class=\"btn btn-primary btn-block\" tabindex=\"2\" rippleEffect>{{'forgot.sendResetLink' |\r\n                        translate}}</button>\r\n                </form>\r\n                <p class=\"text-center mt-2\">\r\n                    <a routerLink=\"/auth/login\"><i data-feather=\"chevron-left\" class=\"mb-25\"></i>\r\n                        {{'authGlobal.backToLogin' | translate}}</a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <!-- /Forgot password-->\r\n    </div>\r\n</div>","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport {\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\nimport { Router } from \"@angular/router\";\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { CallApiService } from \"app/services/call-api.service\";\r\nimport { StorageService } from \"app/services/storage.service\";\r\n\r\n@Component({\r\n  selector: \"login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  //  Public\r\n  public coreConfig: any;\r\n  public loginForm: UntypedFormGroup;\r\n  public loading = false;\r\n  public submitted = false;\r\n  public returnUrl: string;\r\n  public error = \"\";\r\n  public passwordTextType: boolean;\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _formBuilder: UntypedFormBuilder,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _service: CallApiService,\r\n    private _storageService: StorageService\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  /**\r\n   * Toggle password\r\n   */\r\n  togglePasswordTextType() {\r\n    this.passwordTextType = !this.passwordTextType;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    // Login\r\n    this.loading = true;\r\n\r\n    this._service\r\n      .callPostMethod(\"/api/login\", this.loginForm.value)\r\n      .subscribe((data: any) => {\r\n        if (data && data.token) {\r\n          this._storageService.setToken(data.token);\r\n          const user = this._storageService.getDecodeToken();\r\n          if (!user.firstname || !user.lastname) {\r\n            // this._router.navigate([\"wizard\"]);\r\n            window.open(\"wizard\", \"_self\");\r\n          } else {\r\n            // this._router.navigate([\"dashboard/admin\"]);\r\n            window.open(\"dashboard/admin\", \"_self\");\r\n          }\r\n          this.loading = false;\r\n        } else {\r\n          this.error = data.type;\r\n          this.loading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    this.loginForm = this._formBuilder.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      password: [\"\", Validators.required],\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this._route.snapshot.queryParams[\"returnUrl\"] || \"/\";\r\n\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n}\r\n","<div class=\"auth-wrapper auth-v2\">\r\n  <div class=\"auth-inner row m-0\">\r\n    <!-- Brand logo--><a class=\"brand-logo\" href=\"javascript:void(0);\">\r\n      <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n      <h2 class=\"brand-text text-primary ml-1\">{{ coreConfig.app.appName }}</h2>\r\n    </a>\r\n    <!-- /Brand logo-->\r\n    <!-- Left Text-->\r\n    <div class=\"d-none d-lg-flex col-lg-8 align-items-center p-5\">\r\n      <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\r\n        <img class=\"img-fluid\" [src]=\"\r\n            coreConfig.layout.skin === 'dark'\r\n              ? 'assets/images/pages/login-v2-dark.svg'\r\n              : 'assets/images/pages/login-v2.svg'\r\n          \" alt=\"Login V2\" />\r\n      </div>\r\n    </div>\r\n    <!-- /Left Text-->\r\n    <!-- Login-->\r\n    <div class=\"d-flex col-lg-4 align-items-center auth-bg px-2 p-lg-5\">\r\n      <div class=\"col-12 col-sm-8 col-md-6 col-lg-12 px-xl-2 mx-auto\">\r\n        <h2 class=\"card-title font-weight-bold mb-1\">{{'login.title' | translate}}</h2>\r\n        <p class=\"card-text mb-2\">{{'login.subtitle' | translate}}</p>\r\n\r\n        <ngb-alert [type]=\"'danger'\" [dismissible]=\"false\" *ngIf=\"error\">\r\n          <div class=\"alert-body\">\r\n            <p *ngIf=\"error === 'verified'\">{{ 'login.verifiedError' | translate }}</p>\r\n            <p *ngIf=\"error === 'active'\">{{ 'login.activeError' | translate }}</p>\r\n            <p *ngIf=\"error === 'exist'\">{{ 'login.notExistsError' | translate }}</p>\r\n          </div>\r\n        </ngb-alert>\r\n\r\n        <form class=\"auth-login-form mt-2\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\" for=\"login-email\">Email</label>\r\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\"\r\n              [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" placeholder=\"admin@demo.com\"\r\n              aria-describedby=\"login-email\" autofocus=\"\" tabindex=\"1\" />\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.email.errors.required\">{{'login.emailIsRequired' | translate}}</div>\r\n              <div *ngIf=\"f.email.errors.email\">{{'login.emailMustBeValid' | translate}}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"d-flex justify-content-between\">\r\n              <label for=\"login-password\">{{'login.password' | translate}}</label><a\r\n                routerLink=\"/auth/forgot-password\"><small>{{'login.forgotPassword' | translate}}</small></a>\r\n            </div>\r\n            <div class=\"input-group input-group-merge form-password-toggle\">\r\n              <input [type]=\"passwordTextType ? 'text' : 'password'\" formControlName=\"password\"\r\n                class=\"form-control form-control-merge\"\r\n                [ngClass]=\"{ 'is-invalid error': submitted && f.password.errors }\" placeholder=\"············\"\r\n                aria-describedby=\"login-password\" tabindex=\"2\" />\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text cursor-pointer\"><i class=\"feather font-small-4\" [ngClass]=\"{\r\n                      'icon-eye-off': passwordTextType,\r\n                      'icon-eye': !passwordTextType\r\n                    }\" (click)=\"togglePasswordTextType()\"></i></span>\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\"\r\n              [ngClass]=\"{ 'd-block': submitted && f.password.errors }\">\r\n              <div *ngIf=\"f.password.errors.required\">{{'login.passwordIsRequired' | translate}}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"custom-control custom-checkbox\">\r\n              <input class=\"custom-control-input\" id=\"remember-me\" type=\"checkbox\" tabindex=\"3\" />\r\n              <label class=\"custom-control-label\" for=\"remember-me\"> {{'login.rememberMe' | translate}}</label>\r\n            </div>\r\n          </div>\r\n          <button [disabled]=\"loading\" class=\"btn btn-primary btn-block\" tabindex=\"4\" rippleEffect>\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>{{'login.signIn' | translate}}\r\n          </button>\r\n        </form>\r\n        <p class=\"text-center mt-2\">\r\n          <span>{{'login.newOnPlatform' | translate}}</span><a\r\n            routerLink=\"/auth/signup\"><span>&nbsp;{{'login.createAnAccount' |\r\n              translate}}</span></a>\r\n        </p>\r\n        <div class=\"divider my-2\">\r\n          <div class=\"divider-text\">or</div>\r\n        </div>\r\n        <div class=\"auth-footer-btn d-flex justify-content-center\">\r\n          <a class=\"btn btn-facebook\" href=\"javascript:void(0)\"><i data-feather=\"facebook\"></i></a><a\r\n            class=\"btn btn-twitter white\" href=\"javascript:void(0)\"><i data-feather=\"twitter\"></i></a><a\r\n            class=\"btn btn-google\" href=\"javascript:void(0)\"><i data-feather=\"mail\"></i></a><a class=\"btn btn-github\"\r\n            href=\"javascript:void(0)\"><i data-feather=\"github\"></i></a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- /Login-->\r\n  </div>\r\n</div>","import { Component, ViewEncapsulation } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { CallApiService } from \"app/services/call-api.service\";\r\nimport { Subject } from \"rxjs\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"app-verified-mail\",\r\n  templateUrl: \"./verified-mail.component.html\",\r\n  styleUrls: [\"./verified-mail.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class VerifiedMailComponent {\r\n  // Public\r\n  public coreConfig: any;\r\n  public display = false;\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   * @param {FormBuilder} _formBuilder\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _service: CallApiService,\r\n    private _activateRouter: ActivatedRoute,\r\n    private _router: Router\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n\r\n    this._service\r\n      .callGetMethod(\r\n        \"/api/checkIfMailVerified\",\r\n        this._activateRouter.snapshot.params.email\r\n      )\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(\r\n        (data) => {\r\n          this.display = true;\r\n          if (data) {\r\n            return;\r\n          } else {\r\n            this._router.navigate([\"/miscellaneous/something-happened\"]);\r\n          }\r\n        },\r\n        (error) => {\r\n          this._router.navigate([\"/miscellaneous/something-happened\"]);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<!-- Under maintenance-->\r\n<div class=\"misc-wrapper\" *ngIf=\"display\">\r\n    <!-- Brand logo--><a class=\"brand-logo d-flex p-2\" href=\"javascript:void(0);\">\r\n        <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n        <h2 class=\"brand-text text-primary ml-1\">{{ coreConfig.app.appName }}</h2>\r\n    </a>\r\n    <div class=\"misc-inner p-2 p-sm-3\">\r\n        <div class=\"w-100 text-center\">\r\n            <h2 class=\"mb-1\">{{'verifiedMail.title' | translate}} </h2>\r\n            <p class=\"mb-3\">{{'verifiedMail.text' | translate}}\r\n            </p>\r\n            <form class=\"row row-cols-md-auto row justify-content-center align-items-center m-0 mb-2 gx-3\"\r\n                action=\"javascript:void(0)\">\r\n                <div class=\"col-12 d-md-block d-grid ps-md-0 ps-auto\">\r\n                    <button routerLink=\"/auth/login\" class=\"btn btn-primary mb-1 btn-sm-block\"\r\n                        type=\"submit\">{{'verifiedMail.goToLogin' |\r\n                        translate}}</button>\r\n                </div>\r\n            </form><img class=\"img-fluid\" src=\"../../../../assets/images/illustration/verified-mail.png\"\r\n                alt=\"Under maintenance page\" />\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- / Under maintenance-->","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport {\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\n\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { CallApiService } from \"app/services/call-api.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { ResponseModel } from \"app/models/response-model\";\r\n\r\n@Component({\r\n  selector: \"app-reset-password\",\r\n  templateUrl: \"./reset-password.component.html\",\r\n  styleUrls: [\"./reset-password.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  public coreConfig: any;\r\n  public passwordTextType: boolean;\r\n  public confPasswordTextType: boolean;\r\n  public resetPasswordForm: UntypedFormGroup;\r\n  public submitted = false;\r\n  public response = new ResponseModel();\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   * @param {FormBuilder} _formBuilder\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _formBuilder: UntypedFormBuilder,\r\n    private _service: CallApiService,\r\n    private _activateRouter: ActivatedRoute,\r\n    private _router: Router\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.resetPasswordForm.controls;\r\n  }\r\n\r\n  /**\r\n   * Toggle password\r\n   */\r\n  togglePasswordTextType() {\r\n    this.passwordTextType = !this.passwordTextType;\r\n  }\r\n\r\n  /**\r\n   * Toggle confirm password\r\n   */\r\n  toggleConfPasswordTextType() {\r\n    this.confPasswordTextType = !this.confPasswordTextType;\r\n  }\r\n\r\n  /**\r\n   * On Submit\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.resetPasswordForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.resetPassword();\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    this.resetPasswordForm = this._formBuilder.group({\r\n      newPassword: [\"\", [Validators.required]],\r\n      confirmPassword: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n\r\n    this.checkIfMailExists();\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  checkIfMailExists() {\r\n    this._service\r\n      .callGetMethod(\r\n        \"/api/checkIfMailExists\",\r\n        this._activateRouter.snapshot.params.email\r\n      )\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(\r\n        (data) => {\r\n          if (data) {\r\n            return;\r\n          } else {\r\n            this._router.navigate([\"/miscellaneous/something-happened\"]);\r\n          }\r\n        },\r\n        (error) => {\r\n          this._router.navigate([\"/miscellaneous/something-happened\"]);\r\n        }\r\n      );\r\n  }\r\n\r\n  resetPassword() {\r\n    this.response = new ResponseModel();\r\n    if (\r\n      this.resetPasswordForm.value.newPassword ===\r\n      this.resetPasswordForm.value.confirmPassword\r\n    ) {\r\n      const body = {\r\n        password: this.resetPasswordForm.value.newPassword,\r\n        email: this._activateRouter.snapshot.params.email,\r\n      };\r\n      this._service\r\n        .callPostMethod(\"/api/resetPassword\", body)\r\n        .subscribe((data) => {\r\n          if (data) {\r\n            this.response.changedPasswordSuccessfuly = true;\r\n            setTimeout(() => {\r\n              this._router.navigate([\"/auth/login\"]);\r\n            }, 3000);\r\n          }\r\n        });\r\n    } else {\r\n      this.response.passwordNotMatch = true;\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-wrapper auth-v2\">\r\n    <div class=\"auth-inner row m-0\">\r\n        <!-- Brand logo--><a class=\"brand-logo\" href=\"javascript:void(0);\">\r\n            <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n            <h2 class=\"brand-text text-primary ml-1\">{{ coreConfig.app.appName }}</h2>\r\n        </a>\r\n        <!-- /Brand logo-->\r\n        <!-- Left Text-->\r\n        <div class=\"d-none d-lg-flex col-lg-8 align-items-center p-5\">\r\n            <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\r\n                <img [src]=\"\r\n              coreConfig.layout.skin === 'dark'\r\n                ? 'assets/images/pages/reset-password-v2-dark.svg'\r\n                : 'assets/images/pages/reset-password-v2.svg'\r\n            \" img-fluid=\"img-fluid\" alt=\"Register V2\" />\r\n            </div>\r\n        </div>\r\n        <!-- /Left Text-->\r\n        <!-- Reset password-->\r\n        <div class=\"d-flex col-lg-4 align-items-center auth-bg px-2 p-lg-5\">\r\n            <div class=\"col-12 col-sm-8 col-md-6 col-lg-12 px-xl-2 mx-auto\">\r\n                <h2 class=\"card-title font-weight-bold mb-1\">{{'resetPassword.title' | translate}}</h2>\r\n                <p class=\"card-text mb-2\">{{'resetPassword.text' | translate}}</p>\r\n                <form class=\"auth-reset-password-form mt-2\" [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"d-flex justify-content-between\">\r\n                            <label for=\"reset-password-new\">{{'resetPassword.newPassword' | translate}}</label>\r\n                        </div>\r\n                        <div class=\"input-group input-group-merge form-password-toggle\">\r\n                            <input [type]=\"passwordTextType ? 'text' : 'password'\" formControlName=\"newPassword\"\r\n                                class=\"form-control form-control-merge\" placeholder=\"············\"\r\n                                aria-describedby=\"reset-password-new\" tabindex=\"1\" autofocus\r\n                                [ngClass]=\"{ 'is-invalid error': submitted && f.newPassword.errors }\" />\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text cursor-pointer\"><i class=\"feather font-small-4\" [ngClass]=\"{\r\n                        'icon-eye-off': passwordTextType,\r\n                        'icon-eye': !passwordTextType\r\n                      }\" (click)=\"togglePasswordTextType()\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"submitted && f.newPassword.errors\" class=\"invalid-feedback\"\r\n                            [ngClass]=\"{ 'd-block': submitted && f.newPassword.errors }\">\r\n                            <div *ngIf=\"f.newPassword.errors.required\">{{'form.passwordIsRequired' | translate}}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"d-flex justify-content-between\">\r\n                            <label for=\"reset-password-confirm\">{{'resetPassword.confirmPassword' | translate}}</label>\r\n                        </div>\r\n                        <div class=\"input-group input-group-merge form-password-toggle\">\r\n                            <input [type]=\"confPasswordTextType ? 'text' : 'password'\" formControlName=\"confirmPassword\"\r\n                                class=\"form-control form-control-merge\" placeholder=\"············\"\r\n                                aria-describedby=\"reset-password-confirm\" tabindex=\"2\"\r\n                                [ngClass]=\"{ 'is-invalid error': submitted && f.confirmPassword.errors }\" />\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text cursor-pointer\"><i class=\"feather font-small-4\" [ngClass]=\"{\r\n                        'icon-eye-off': confPasswordTextType,\r\n                        'icon-eye': !confPasswordTextType\r\n                      }\" (click)=\"toggleConfPasswordTextType()\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\"\r\n                            [ngClass]=\"{ 'd-block': submitted && f.confirmPassword.errors }\">\r\n                            <div *ngIf=\"f.confirmPassword.errors.required\">{{'form.passwordIsRequired' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- NOT SUCCESSFULY MESSAGE -->\r\n\r\n                    <div *ngIf=\"response.passwordNotMatch\" class=\"text-center\">\r\n                        <p class=\"badge badge-light-danger badge-pill full-width p-1\">{{'resetPassword.passwordNotMatch'\r\n                            |\r\n                            translate}}</p>\r\n                    </div>\r\n\r\n                    <!-- END NOT SUCCESSFULY MESSAGE -->\r\n\r\n                    <!-- SUCCESSFULY MESSAGE -->\r\n                    <div *ngIf=\"response.changedPasswordSuccessfuly\" class=\"text-center\">\r\n                        <p class=\"badge badge-light-success badge-pill full-width p-1 white-space-break\">\r\n                            {{'resetPassword.changedPasswordSuccessfuly' |\r\n                            translate}}</p>\r\n                    </div>\r\n                    <!-- END SUCCESSFULY MESSAGE -->\r\n\r\n                    <button class=\"btn btn-primary btn-block\" tabindex=\"3\" rippleEffect>{{'resetPassword.setNewPassword'\r\n                        | translate}}</button>\r\n                </form>\r\n                <p class=\"text-center mt-2\">\r\n                    <a routerLink=\"/auth/login\"><i data-feather=\"chevron-left\" class=\"mb-25\"></i>\r\n                        {{'authGlobal.backToLogin' | translate}}</a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <!-- /Reset password-->\r\n    </div>\r\n</div>","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport {\r\n  UntypedFormBuilder,\r\n  UntypedFormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\n\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { CoreConfigService } from \"@core/services/config.service\";\r\nimport { CallApiService } from \"app/services/call-api.service\";\r\nimport { ResponseModel } from \"app/models/response-model\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { ToastrComponent } from \"app/common/toastr/toastr.component\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\n\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.scss\"],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  // Public\r\n  public coreConfig: any;\r\n  public passwordTextType: boolean;\r\n  public registerForm: UntypedFormGroup;\r\n  public submitted = false;\r\n  public response = new ResponseModel();\r\n  public loading = false;\r\n\r\n  // Private\r\n  private _unsubscribeAll: Subject<any>;\r\n\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {CoreConfigService} _coreConfigService\r\n   * @param {FormBuilder} _formBuilder\r\n   */\r\n  constructor(\r\n    private _coreConfigService: CoreConfigService,\r\n    private _formBuilder: UntypedFormBuilder,\r\n    private _service: CallApiService,\r\n    private _router: Router,\r\n    private _activatedRouter: ActivatedRoute,\r\n    private _toastr: ToastrComponent,\r\n    private _translate: TranslateService\r\n  ) {\r\n    this._unsubscribeAll = new Subject();\r\n\r\n    // Configure the layout\r\n    this._coreConfigService.config = {\r\n      layout: {\r\n        navbar: {\r\n          hidden: true,\r\n        },\r\n        menu: {\r\n          hidden: true,\r\n        },\r\n        footer: {\r\n          hidden: true,\r\n        },\r\n        customizer: false,\r\n        enableLocalStorage: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.registerForm.controls;\r\n  }\r\n\r\n  /**\r\n   * Toggle password\r\n   */\r\n  togglePasswordTextType() {\r\n    this.passwordTextType = !this.passwordTextType;\r\n  }\r\n\r\n  /**\r\n   * On Submit\r\n   */\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.signUp(this.registerForm.value);\r\n  }\r\n\r\n  // Lifecycle Hooks\r\n  // -----------------------------------------------------------------------------------------------------\r\n\r\n  /**\r\n   * On init\r\n   */\r\n  ngOnInit(): void {\r\n    this.registerForm = this._formBuilder.group({\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      password: [\"\", Validators.required],\r\n      rePassword: [\"\", Validators.required],\r\n    });\r\n\r\n    // Subscribe to config changes\r\n    this._coreConfigService.config\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe((config) => {\r\n        this.coreConfig = config;\r\n      });\r\n    this.validateRecommenedBonusLink();\r\n  }\r\n\r\n  /**\r\n   * On destroy\r\n   */\r\n  ngOnDestroy(): void {\r\n    // Unsubscribe from all subscriptions\r\n    this._unsubscribeAll.next();\r\n    this._unsubscribeAll.complete();\r\n  }\r\n\r\n  //#region\r\n\r\n  signUp(data: any) {\r\n    this.response = new ResponseModel();\r\n    this.loading = true;\r\n    if (data.password === data.rePassword) {\r\n      this._service.callPostMethod(\"/api/signUp\", data).subscribe((data) => {\r\n        if (data) {\r\n          this.response.verifyYourMail = true;\r\n          this.loading = false;\r\n          this.createRecommendedBonus();\r\n          setTimeout(() => {\r\n            this._router.navigate([\"/auth/login\"]);\r\n          }, 6000);\r\n        } else {\r\n          this.loading = false;\r\n          this.response.mailExists = true;\r\n        }\r\n      });\r\n    } else {\r\n      this.loading = false;\r\n      this.response.passwordNotMatch = true;\r\n    }\r\n  }\r\n\r\n  validateRecommenedBonusLink() {\r\n    const id = this._activatedRouter.snapshot.queryParams.id;\r\n    if (id) {\r\n      this._service\r\n        .callGetMethod(\"/api/validateRecommenedBonusLink\", id)\r\n        .subscribe((data) => {\r\n          if (!data) {\r\n            this._router.navigate([\"/auth/signup\"]);\r\n            this._toastr.showErrorCustom(\r\n              this._translate.instant(\"recommended.wrongRecommendedBonusLink\")\r\n            );\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  createRecommendedBonus() {\r\n    const id = this._activatedRouter.snapshot.queryParams.id;\r\n    if (id) {\r\n      this._service\r\n        .callPostMethod(\"/api/createRecommendedBonus\", { id: id })\r\n        .subscribe((data) => {});\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n}\r\n","<div class=\"auth-wrapper auth-v2\">\r\n    <div class=\"auth-inner row m-0\">\r\n        <!-- Brand logo--><a class=\"brand-logo\" href=\"javascript:void(0);\">\r\n            <img src=\"{{ coreConfig.app.appLogoImage }}\" alt=\"brand-logo\" height=\"28\" />\r\n            <h2 class=\"brand-text text-primary ml-1\">{{ coreConfig.app.appName }}</h2>\r\n        </a>\r\n        <!-- /Brand logo-->\r\n        <!-- Left Text-->\r\n        <div class=\"d-none d-lg-flex col-lg-8 align-items-center p-5\">\r\n            <div class=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\r\n                <img class=\"img-fluid\" [src]=\"\r\n              coreConfig.layout.skin === 'dark'\r\n                ? 'assets/images/pages/register-v2-dark.svg'\r\n                : 'assets/images/pages/register-v2.svg'\r\n            \" alt=\"Register V2\" />\r\n            </div>\r\n        </div>\r\n        <!-- /Left Text-->\r\n        <!-- Register-->\r\n        <div class=\"d-flex col-lg-4 align-items-center auth-bg px-2 p-lg-5\">\r\n            <div class=\"col-12 col-sm-8 col-md-6 col-lg-12 px-xl-2 mx-auto\">\r\n                <h2 class=\"card-title font-weight-bold mb-1\">{{'signUp.title' | translate}}</h2>\r\n                <p class=\"card-text mb-2\">{{'signUp.text' | translate}}</p>\r\n                <form class=\"auth-register-form mt-2\" [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"register-email\" class=\"form-label\">{{'commonFields.email' | translate}}</label>\r\n                        <input type=\"text\" formControlName=\"email\" class=\"form-control\" placeholder=\"email@termmy.com\"\r\n                            aria-describedby=\"register-email\" tabindex=\"2\"\r\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"f.email.errors.required\">{{'form.emailIsRequired' | translate}}</div>\r\n                            <div *ngIf=\"f.email.errors.email\">{{'form.emailMustBeValid' | translate}}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"register-password\" class=\"form-label\">{{'commonFields.password' |\r\n                            translate}}</label>\r\n\r\n                        <div class=\"input-group input-group-merge form-password-toggle\">\r\n                            <input [type]=\"passwordTextType ? 'text' : 'password'\" formControlName=\"password\"\r\n                                class=\"form-control form-control-merge\" placeholder=\"············\"\r\n                                aria-describedby=\"register-password\" tabindex=\"3\"\r\n                                [ngClass]=\"{ 'is-invalid error': submitted && f.password.errors }\" />\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text cursor-pointer\"><i class=\"feather font-small-4\" [ngClass]=\"{\r\n                        'icon-eye-off': passwordTextType,\r\n                        'icon-eye': !passwordTextType\r\n                      }\" (click)=\"togglePasswordTextType()\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\"\r\n                            [ngClass]=\"{ 'd-block': submitted && f.password.errors }\">\r\n                            <div *ngIf=\"f.password.errors.required\">{{'form.passwordIsRequired'}}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"register-password\" class=\"form-label\">{{'commonFields.rePassword' |\r\n                            translate}}</label>\r\n\r\n                        <div class=\"input-group input-group-merge form-password-toggle\">\r\n                            <input [type]=\"passwordTextType ? 'text' : 'password'\" formControlName=\"rePassword\"\r\n                                class=\"form-control form-control-merge\" placeholder=\"············\"\r\n                                aria-describedby=\"register-password\" tabindex=\"3\"\r\n                                [ngClass]=\"{ 'is-invalid error': submitted && f.password.errors }\" />\r\n                            <div class=\"input-group-append\">\r\n                                <span class=\"input-group-text cursor-pointer\"><i class=\"feather font-small-4\" [ngClass]=\"{\r\n                        'icon-eye-off': passwordTextType,\r\n                        'icon-eye': !passwordTextType\r\n                      }\" (click)=\"togglePasswordTextType()\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\"\r\n                            [ngClass]=\"{ 'd-block': submitted && f.password.errors }\">\r\n                            <div *ngIf=\"f.password.errors.required\">{{'signUp.passwordIsRequired'}}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"custom-control custom-checkbox\">\r\n                            <input class=\"custom-control-input\" type=\"checkbox\" id=\"register-privacy-policy\"\r\n                                tabindex=\"4\" />\r\n                            <label class=\"custom-control-label\" for=\"register-privacy-policy\">\r\n                                {{'signUp.IAgreeTo' | translate}} <a href=\"javascript:void(0);\">{{'signUp.privacy' |\r\n                                    translate}}</a>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <!-- LABELS -->\r\n                    <div>\r\n\r\n                        <!-- NOT SUCCESSFULY MESSAGE -->\r\n\r\n                        <div *ngIf=\"submitted && registerForm.invalid\" class=\"text-center\">\r\n                            <p class=\"badge badge-light-danger badge-pill full-width p-1\">{{'signUp.fillRequredFields' |\r\n                                translate}}</p>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"response.mailExists\" class=\"text-center\">\r\n                            <p class=\"badge badge-light-danger badge-pill full-width p-1 white-space-break\">\r\n                                {{'signUp.mailExists' |\r\n                                translate}}</p>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"response.passwordNotMatch\" class=\"text-center\">\r\n                            <p class=\"badge badge-light-danger badge-pill full-width p-1 white-space-break\">\r\n                                {{'signUp.passwordNotMatch' |\r\n                                translate}}</p>\r\n                        </div>\r\n\r\n                        <!-- END NOT SUCCESSFULY MESSAGE -->\r\n\r\n                        <!-- SUCCESSFULY MESSAGE -->\r\n\r\n                        <div *ngIf=\"response.verifyYourMail\" class=\"text-center\">\r\n                            <p class=\"badge badge-light-success badge-pill full-width p-1 white-space-break\">\r\n                                {{'signUp.verifyYouMail' |\r\n                                translate}}</p>\r\n                        </div>\r\n\r\n                        <!-- END SUCCESSFULY MESSAGE -->\r\n                    </div>\r\n                    <!-- END LABELS -->\r\n                    <button class=\"btn btn-primary btn-block\" tabindex=\"5\" rippleEffect> <span *ngIf=\"loading\"\r\n                            class=\"spinner-border spinner-border-sm mr-1\"></span>{{'signUp.signUp' |\r\n                        translate}}</button>\r\n                </form>\r\n                <p class=\"text-center mt-2\">\r\n                    <span>{{'signUp.alreadyHaveAnAccount' | translate}}</span><a\r\n                        routerLink=\"/auth/login\"><span>&nbsp;{{'signUp.signInInstead' | translate}}</span></a>\r\n                </p>\r\n                <!-- <div class=\"divider my-2\">\r\n                    <div class=\"divider-text\">or</div>\r\n                </div>\r\n                <div class=\"auth-footer-btn d-flex justify-content-center\">\r\n                    <a class=\"btn btn-facebook\" href=\"javascript:void(0)\"><i data-feather=\"facebook\"></i></a><a\r\n                        class=\"btn btn-twitter white\" href=\"javascript:void(0)\"><i data-feather=\"twitter\"></i></a><a\r\n                        class=\"btn btn-google\" href=\"javascript:void(0)\"><i data-feather=\"mail\"></i></a><a\r\n                        class=\"btn btn-github\" href=\"javascript:void(0)\"><i data-feather=\"github\"></i></a>\r\n                </div> -->\r\n            </div>\r\n        </div>\r\n        <!-- /Register-->\r\n    </div>\r\n</div>","export class ResponseModel {\r\n  mailExists: boolean;\r\n  mailNotExists: boolean;\r\n  verifyYourMail: boolean;\r\n  passwordNotMatch: boolean;\r\n  sendLinkForResetOnMail: boolean;\r\n  changedPasswordSuccessfuly: boolean;\r\n}\r\n"],"names":["CommonModule","FormsModule","ReactiveFormsModule","RouterModule","NgbModule","CoreCommonModule","LoginComponent","SignupComponent","ResetPasswordComponent","ForgotPasswordComponent","TranslateLoader","TranslateModule","VerifiedMailComponent","ToastrComponent","HttpLoaderFactory","HttpClient","routes","path","redirectTo","pathMatch","component","data","animation","AuthenticationModule","_","_2","_3","imports","forChild","loader","provide","useFactory","deps","declarations","i1","i2","Validators","takeUntil","Subject","ResponseModel","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵtemplate","ForgotPasswordComponent_div_23_div_1_Template","ForgotPasswordComponent_div_23_div_2_Template","ɵɵproperty","ctx_r0","f","email","errors","required","ɵɵtextInterpolate1","constructor","_coreConfigService","_formBuilder","_service","submitted","response","_unsubscribeAll","config","layout","navbar","hidden","menu","footer","customizer","enableLocalStorage","forgotPasswordForm","controls","onSubmit","invalid","sendResetLink","ngOnInit","group","pipe","subscribe","coreConfig","ngOnDestroy","next","complete","callPostMethod","value","sendLinkForResetOnMail","mailNotExists","ɵɵdirectiveInject","CoreConfigService","UntypedFormBuilder","i3","CallApiService","selectors","decls","vars","consts","template","ForgotPasswordComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","ForgotPasswordComponent_Template_form_ngSubmit_17_listener","ForgotPasswordComponent_div_23_Template","ForgotPasswordComponent_div_24_Template","ForgotPasswordComponent_div_25_Template","ɵɵpropertyInterpolate","app","appLogoImage","ɵɵsanitizeUrl","appName","skin","ɵɵpureFunction1","_c0","LoginComponent_ngb_alert_17_p_2_Template","LoginComponent_ngb_alert_17_p_3_Template","LoginComponent_ngb_alert_17_p_4_Template","error","LoginComponent_div_23_div_1_Template","LoginComponent_div_23_div_2_Template","ctx_r1","LoginComponent_div_38_div_1_Template","ctx_r2","password","_route","_router","_storageService","loading","loginForm","togglePasswordTextType","passwordTextType","token","setToken","user","getDecodeToken","firstname","lastname","window","open","type","returnUrl","snapshot","queryParams","ActivatedRoute","Router","i4","i5","StorageService","LoginComponent_Template","LoginComponent_ngb_alert_17_Template","LoginComponent_Template_form_ngSubmit_18_listener","LoginComponent_div_23_Template","LoginComponent_Template_i_click_37_listener","LoginComponent_div_38_Template","LoginComponent_span_46_Template","_c1","_c2","ɵɵpureFunction2","_c3","_activateRouter","display","callGetMethod","params","navigate","VerifiedMailComponent_Template","VerifiedMailComponent_div_0_Template","ResetPasswordComponent_div_28_div_1_Template","newPassword","ResetPasswordComponent_div_39_div_1_Template","confirmPassword","resetPasswordForm","toggleConfPasswordTextType","confPasswordTextType","resetPassword","checkIfMailExists","body","changedPasswordSuccessfuly","setTimeout","passwordNotMatch","ResetPasswordComponent_Template","ResetPasswordComponent_Template_form_ngSubmit_17_listener","ResetPasswordComponent_Template_i_click_27_listener","ResetPasswordComponent_div_28_Template","ResetPasswordComponent_Template_i_click_38_listener","ResetPasswordComponent_div_39_Template","ResetPasswordComponent_div_40_Template","ResetPasswordComponent_div_41_Template","SignupComponent_div_23_div_1_Template","SignupComponent_div_23_div_2_Template","SignupComponent_div_33_div_1_Template","SignupComponent_div_43_div_1_Template","_activatedRouter","_toastr","_translate","registerForm","signUp","rePassword","validateRecommenedBonusLink","verifyYourMail","createRecommendedBonus","mailExists","id","showErrorCustom","instant","i6","TranslateService","SignupComponent_Template","SignupComponent_Template_form_ngSubmit_17_listener","SignupComponent_div_23_Template","SignupComponent_Template_i_click_32_listener","SignupComponent_div_33_Template","SignupComponent_Template_i_click_42_listener","SignupComponent_div_43_Template","SignupComponent_div_54_Template","SignupComponent_div_55_Template","SignupComponent_div_56_Template","SignupComponent_div_57_Template","SignupComponent_span_59_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}